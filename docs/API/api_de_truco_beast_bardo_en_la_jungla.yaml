openapi: 3.0.1
info:
  title: "APIs de Truco Beast: Bardo en la jungla"
  description: The API is used to ...
  termsOfService: terms-of-service
  contact:
    name: DP1-2024-Group 3
    url: https://www.youtube.com/@MIDPIE-TRUCO
    email: midpie@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: v1.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Fotos
  description: La pequeña API de gestión de las fotos de trofeos y perfiles. Se debe estar autenticado para utilizarla.
- name: Jugador
  description: La API de gestión del jugador. Se debe estar autenticado para utilizarla.
- name: CurrentUser
  description: La API de gestión del Usuario Actual. Se debe estar autenticado para utilizarla.
- name: UserRestController
  description: La API de gestión de los Usuarios. Se debe estar autenticado para utilizarla.
- name: Partida
  description: La API de gestión de las partidas. Se debe estar autenticado para utilizarla.
- name: Mano
  description: La API de gestión de la Manos de las partidas con las acciones posibles de los jugadores. Se debe estar autenticado para utilizarla.
- name: Logros
  description: La API de gestión de los Logros. Se debe estar autenticado para utilizarla.
- name: Chat
  description: La API de gestión de los Chats
- name: PartidaJugador
  description: La API de gestión de los PartidaJugador. Se debe estar autenticado para utilizarla.
- name: Cartas
  description: La API de gestión de las cartas. Se debe estar autenticado para utilizarla.
- name: Autenticación
  description: La API de autenticación basada en JWT (JSON Web Token)
- name: Estadisticas
  description: La API de gestión de todas las Estadisticas. Se debe estar autenticado para utilizarla.
paths:
  /api/v1/users/{userId}:
    put:
      tags:
      - UserRestController
      summary: Actualizar un usuario
      description: Actualiza un usuario existente por su ID.
      operationId: update
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Usuario valido a actualizar.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartidaJugadorView'
        required: true
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
    delete:
      tags:
      - UserRestController
      summary: Eliminar un usuario
      description: Elimina un usuario por su ID.
      operationId: delete
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Usuario eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/profile/edit:
    put:
      tags:
      - CurrentUser
      summary: Actualizar el perfil del usuario actual
      operationId: updateProfile
      requestBody:
        description: Perfil del usuario a actualizar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerfilJugadorUsuario'
        required: true
      responses:
        "200":
          description: Perfil actualizado con éxito
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Solicitud incorrecta
          content: {}
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/logros/{logroId}:
    put:
      tags:
      - Logros
      summary: Actualizar un logro
      operationId: updateLogro
      parameters:
      - name: logroId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logros'
        required: true
      responses:
        "201":
          description: Logro actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logros'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Logros
      summary: Eliminar un logro
      operationId: deleteLogro
      parameters:
      - name: logroId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Logro eliminado
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado
          content: {}
        "404":
          description: Logro no encontrado
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/edit/{userId}:
    get:
      tags:
      - Jugador
      summary: Buscar jugador por ID de usuario para editar
      operationId: findJugadorByUserIdEdit
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Jugador encontrado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JugadorDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
    put:
      tags:
      - Jugador
      summary: Actualizar jugador por ID de usuario
      operationId: updateJugadorByUserIdEdit
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jugador'
        required: true
      responses:
        "200":
          description: Jugador actualizado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Jugador'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/users:
    get:
      tags:
      - UserRestController
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios. Se puede filtrar por autoridad.
      operationId: findAll
      parameters:
      - name: auth
        in: query
        description: Nombre de la autenticacion
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Lista de usuarios obtenida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
    post:
      tags:
      - UserRestController
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario.
      operationId: create
      requestBody:
        description: Usuario valido a crear.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartidaJugadorView'
        required: true
      responses:
        "201":
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/{partidaId}:
    post:
      tags:
      - PartidaJugador
      summary: Añadir jugador a la partida
      operationId: addJugadorPartida
      parameters:
      - name: partidaId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Jugador añadido
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Jugador ya está en la partida
          content: {}
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida:
    post:
      tags:
      - Partida
      summary: Crear una nueva partida
      operationId: createPartida
      parameters:
      - name: userId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partida'
        required: true
      responses:
        "201":
          description: Partida creada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partida'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/logros:
    get:
      tags:
      - Logros
      summary: Obtener todos los logros
      operationId: getTodosLosLogros
      responses:
        "200":
          description: Lista de logros
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logros'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
    post:
      tags:
      - Logros
      summary: Crear un nuevo logro
      operationId: createLogro
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logros'
        required: true
      responses:
        "201":
          description: Logro creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logros'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/chat/sendto/{userId}:
    post:
      tags:
      - Chat
      summary: Enviar un nuevo mensaje a un usuario específico
      operationId: sendNewMessage
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mensaje'
        required: true
      responses:
        "200":
          description: Mensaje enviado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado para enviar mensaje a este usuario
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/auth/signup:
    post:
      tags:
      - Autenticación
      summary: Registrar usuario
      description: Registra un nuevo usuario
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "200":
          description: Usuario registrado exitosamente
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageResponse'
        "400":
          description: Nombre de usuario ya existe
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageResponse'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/auth/signin:
    post:
      tags:
      - Autenticación
      summary: Iniciar sesión
      description: Autentica al usuario y devuelve un token JWT
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: Autenticación exitosa
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtResponse'
        "400":
          description: Credenciales incorrectas
          content:
            '*/*':
              schema:
                type: string
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/profile/updateConnection:
    patch:
      tags:
      - CurrentUser
      summary: Actualizar la conexión del usuario actual
      operationId: updateConnection
      responses:
        "200":
          description: Conexión actualizada con éxito
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageResponse'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/changeteam:
    patch:
      tags:
      - PartidaJugador
      summary: Cambiar equipo de usuario
      operationId: changeTeamOfUser
      parameters:
      - name: userId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Usuario cambiado de equipo
        "400":
          description: Equipo lleno
          content: {}
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/{codigo}/start:
    patch:
      tags:
      - Partida
      summary: Iniciar una partida por código
      operationId: startGame
      parameters:
      - name: codigo
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Partida comenzada con éxito
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}/tirarCarta/{cartaId}:
    patch:
      tags:
      - Mano
      summary: Tirar carta
      description: Permite a un jugador tirar una carta.
      operationId: patchTirarCarta
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cartaId
        in: path
        description: ID de la carta a tirar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Carta tirada
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Carta'
        "400":
          description: Error al tirar la carta
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}/responderTruco/{respuestasTruco}:
    patch:
      tags:
      - Mano
      summary: Responder truco
      description: Permite a un jugador responder a un truco.
      operationId: patchResponderTruco
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: respuestasTruco
        in: path
        description: Respuesta al truco
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - TRUCO
          - RETRUCO
          - VALECUATRO
          - ENVIDO
          - REAL_ENVIDO
          - FALTA_ENVIDO
          - FLOR
          - CONTRAFLOR
          - CON_FLOR_ME_ACHICO
          - QUIERO
          - NO_QUIERO
          - SUBIR
          - LISTA_ENVIDOS
          - ENVIDO2
          - LISTA_ENVIDOS_FLOR
      responses:
        "200":
          description: Truco respondido
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        "400":
          description: Error al responder truco
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}/responderFlor/{cantoFlor}:
    patch:
      tags:
      - Mano
      summary: Responder flor
      description: Permite a un jugador responder a una flor.
      operationId: patchResponderFlor
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cantoFlor
        in: path
        description: Respuesta a la flor
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - TRUCO
          - RETRUCO
          - VALECUATRO
          - ENVIDO
          - REAL_ENVIDO
          - FALTA_ENVIDO
          - FLOR
          - CONTRAFLOR
          - CON_FLOR_ME_ACHICO
          - QUIERO
          - NO_QUIERO
          - SUBIR
          - LISTA_ENVIDOS
          - ENVIDO2
          - LISTA_ENVIDOS_FLOR
      responses:
        "200":
          description: Flor respondida
          content:
            '*/*':
              schema:
                type: string
                enum:
                - TRUCO
                - RETRUCO
                - VALECUATRO
                - ENVIDO
                - REAL_ENVIDO
                - FALTA_ENVIDO
                - FLOR
                - CONTRAFLOR
                - CON_FLOR_ME_ACHICO
                - QUIERO
                - NO_QUIERO
                - SUBIR
                - LISTA_ENVIDOS
                - ENVIDO2
                - LISTA_ENVIDOS_FLOR
        "400":
          description: Error al responder flor
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}/responderEnvido/{cantoEnvido}:
    patch:
      tags:
      - Mano
      summary: Responder envido
      description: Permite a un jugador responder a un envido.
      operationId: patchResponderEnvido
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cantoEnvido
        in: path
        description: Respuesta al envido
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - TRUCO
          - RETRUCO
          - VALECUATRO
          - ENVIDO
          - REAL_ENVIDO
          - FALTA_ENVIDO
          - FLOR
          - CONTRAFLOR
          - CON_FLOR_ME_ACHICO
          - QUIERO
          - NO_QUIERO
          - SUBIR
          - LISTA_ENVIDOS
          - ENVIDO2
          - LISTA_ENVIDOS_FLOR
      responses:
        "200":
          description: Envido respondido
          content:
            '*/*':
              schema:
                type: string
                enum:
                - TRUCO
                - RETRUCO
                - VALECUATRO
                - ENVIDO
                - REAL_ENVIDO
                - FALTA_ENVIDO
                - FLOR
                - CONTRAFLOR
                - CON_FLOR_ME_ACHICO
                - QUIERO
                - NO_QUIERO
                - SUBIR
                - LISTA_ENVIDOS
                - ENVIDO2
                - LISTA_ENVIDOS_FLOR
        "400":
          description: Error al responder envido
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}/cantarTruco/{cantoTruco}:
    patch:
      tags:
      - Mano
      summary: Cantar truco
      description: Permite a un jugador cantar truco.
      operationId: patchCantarTruco
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cantoTruco
        in: path
        description: Canto de truco
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - TRUCO
          - RETRUCO
          - VALECUATRO
          - ENVIDO
          - REAL_ENVIDO
          - FALTA_ENVIDO
          - FLOR
          - CONTRAFLOR
          - CON_FLOR_ME_ACHICO
          - QUIERO
          - NO_QUIERO
          - SUBIR
          - LISTA_ENVIDOS
          - ENVIDO2
          - LISTA_ENVIDOS_FLOR
      responses:
        "200":
          description: Truco cantado
          content:
            '*/*':
              schema:
                type: string
                enum:
                - TRUCO
                - RETRUCO
                - VALECUATRO
                - ENVIDO
                - REAL_ENVIDO
                - FALTA_ENVIDO
                - FLOR
                - CONTRAFLOR
                - CON_FLOR_ME_ACHICO
                - QUIERO
                - NO_QUIERO
                - SUBIR
                - LISTA_ENVIDOS
                - ENVIDO2
                - LISTA_ENVIDOS_FLOR
        "400":
          description: Error al cantar truco
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}/cantarFlor/{cantoFlor}:
    patch:
      tags:
      - Mano
      summary: Cantar flor
      description: Permite a un jugador cantar flor.
      operationId: patchCantarFlor
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cantoFlor
        in: path
        description: Canto de flor
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - TRUCO
          - RETRUCO
          - VALECUATRO
          - ENVIDO
          - REAL_ENVIDO
          - FALTA_ENVIDO
          - FLOR
          - CONTRAFLOR
          - CON_FLOR_ME_ACHICO
          - QUIERO
          - NO_QUIERO
          - SUBIR
          - LISTA_ENVIDOS
          - ENVIDO2
          - LISTA_ENVIDOS_FLOR
      responses:
        "200":
          description: Flor cantada
          content:
            '*/*':
              schema:
                type: string
                enum:
                - TRUCO
                - RETRUCO
                - VALECUATRO
                - ENVIDO
                - REAL_ENVIDO
                - FALTA_ENVIDO
                - FLOR
                - CONTRAFLOR
                - CON_FLOR_ME_ACHICO
                - QUIERO
                - NO_QUIERO
                - SUBIR
                - LISTA_ENVIDOS
                - ENVIDO2
                - LISTA_ENVIDOS_FLOR
        "400":
          description: Error al cantar flor
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}/cantarEnvido/{cantoEnvido}:
    patch:
      tags:
      - Mano
      summary: Cantar envido
      description: Permite a un jugador cantar envido.
      operationId: patchCantarEnvido
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cantoEnvido
        in: path
        description: Canto de envido
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - TRUCO
          - RETRUCO
          - VALECUATRO
          - ENVIDO
          - REAL_ENVIDO
          - FALTA_ENVIDO
          - FLOR
          - CONTRAFLOR
          - CON_FLOR_ME_ACHICO
          - QUIERO
          - NO_QUIERO
          - SUBIR
          - LISTA_ENVIDOS
          - ENVIDO2
          - LISTA_ENVIDOS_FLOR
      responses:
        "200":
          description: Envido cantado
          content:
            '*/*':
              schema:
                type: string
                enum:
                - TRUCO
                - RETRUCO
                - VALECUATRO
                - ENVIDO
                - REAL_ENVIDO
                - FALTA_ENVIDO
                - FLOR
                - CONTRAFLOR
                - CON_FLOR_ME_ACHICO
                - QUIERO
                - NO_QUIERO
                - SUBIR
                - LISTA_ENVIDOS
                - ENVIDO2
                - LISTA_ENVIDOS_FLOR
        "400":
          description: Error al cantar envido
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/{userId}/isSolicitado/{solicitadoId}:
    patch:
      tags:
      - Jugador
      summary: Crear solicitud
      operationId: crearSolicitud
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: solicitadoId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Solicitud creada
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/isFriend/{amigoId}:
    delete:
      tags:
      - Jugador
      summary: Eliminar amigo
      operationId: deleteFriend
      parameters:
      - name: amigoId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Amigo eliminado
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
    patch:
      tags:
      - Jugador
      summary: Agregar nuevo amigo
      operationId: addNewFriend
      parameters:
      - name: amigoId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Amigo agregado
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/chat/{chatId}/updatetime:
    patch:
      tags:
      - Chat
      summary: Actualizar el tiempo de un chat específico
      operationId: updateChatTime
      parameters:
      - name: chatId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Tiempo del chat actualizado correctamente
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Chat no encontrado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/users/{id}:
    get:
      tags:
      - UserRestController
      summary: Obtener usuario por ID
      description: Devuelve un usuario por su ID.
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Usuario obtenido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/users/paginados:
    get:
      tags:
      - UserRestController
      summary: Obtener usuarios paginados
      description: Devuelve una lista paginada de usuarios.
      operationId: findUsuariosPaginados
      parameters:
      - name: pageable
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Lista paginada de usuarios obtenida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/users/authorities:
    get:
      tags:
      - UserRestController
      summary: Obtener todas las autoridades
      description: Devuelve una lista de todas las autoridades.
      operationId: findAllAuths
      responses:
        "200":
          description: Lista de autoridades obtenida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorities'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/profile:
    get:
      tags:
      - CurrentUser
      summary: Obtener el perfil del usuario actual
      operationId: getProfile
      responses:
        "200":
          description: Perfil obtenido con éxito
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PerfilJugadorUsuario'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/players:
    get:
      tags:
      - PartidaJugador
      summary: Obtener jugadores conectados a una partida
      operationId: getPlayersConnectedTo
      parameters:
      - name: partidaCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Jugadores obtenidos
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PartidaJugadorDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/partidaJugadorActual:
    get:
      tags:
      - PartidaJugador
      summary: Obtener partida jugador actual
      operationId: getPartidaJugadorActual
      responses:
        "200":
          description: Partida jugador actual obtenida
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PartidaJugadorDTO'
        "202":
          description: No hay partida jugador actual
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/numjugadores:
    get:
      tags:
      - PartidaJugador
      summary: Obtener número de jugadores en la partida
      operationId: getNumJugadoresPartida
      parameters:
      - name: partidaId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Número de jugadores obtenido
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/miposicion/{partidaId}:
    get:
      tags:
      - PartidaJugador
      summary: Obtener mi posición en la partida
      operationId: getMiPosicion
      parameters:
      - name: partidaId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Posición obtenida
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Partida no encontrada
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/jugadores/codigoPartida/{codigo}:
    get:
      tags:
      - PartidaJugador
      summary: Obtener todos los jugadores de una partida por código
      operationId: getAllJugadoresPartida
      parameters:
      - name: codigo
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Jugadores obtenidos
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PartidaJugadorView'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Partida no encontrada
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/connectedTo/{jugadorId}:
    get:
      tags:
      - PartidaJugador
      summary: Obtener número de partidas conectadas por jugador
      operationId: getNumberOfGamesConnected
      parameters:
      - name: jugadorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Número de partidas obtenido
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/{id}:
    get:
      tags:
      - Partida
      summary: Obtener una partida por ID
      operationId: findPartidaById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Partida obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partida'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/search:
    get:
      tags:
      - Partida
      summary: Buscar una partida por código
      operationId: findPartidaByCodigo
      parameters:
      - name: codigo
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Partida encontrada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partida'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/partidas:
    get:
      tags:
      - Partida
      summary: Obtener todas las partidas
      operationId: findAll_1
      responses:
        "200":
          description: Lista de partidas obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partida'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/partidas/paginadas:
    get:
      tags:
      - Partida
      summary: Obtener partidas con participantes
      operationId: findPartidasConParticipantes
      parameters:
      - name: pageable
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Lista de partidas con participantes obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartidaDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/partidas/historial:
    get:
      tags:
      - Partida
      summary: Obtener el historial de partidas del usuario actual
      operationId: findHistorialPartidas
      parameters:
      - name: pageable
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Historial de partidas obtenido con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartidaDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/partidas/accesibles:
    get:
      tags:
      - Partida
      summary: Obtener partidas activas públicas
      operationId: findPartidasActivasPublicas
      parameters:
      - name: pageable
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Lista de partidas activas públicas obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partida'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/manos/{codigo}:
    get:
      tags:
      - Mano
      summary: Actualizar mano
      description: Obtiene la información de la mano actual.
      operationId: actualizarMano
      parameters:
      - name: codigo
        in: path
        description: Código de la mano
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Mano actualizada
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Mano'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Mano no encontrada
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/logros/total:
    get:
      tags:
      - Logros
      summary: Obtener el total de logros
      operationId: getTotalLogros
      responses:
        "200":
          description: Total de logros
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/logros/misLogros:
    get:
      tags:
      - Logros
      summary: Obtener mis logros
      operationId: getMisLogros
      responses:
        "200":
          description: Lista de mis logros
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logros'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador:
    get:
      tags:
      - Jugador
      summary: Buscar jugador por ID de usuario
      operationId: findJugadorByUserId
      parameters:
      - name: userId
        in: query
        description: ID del usuario
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Jugador encontrado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JugadorDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/{userName}:
    get:
      tags:
      - Jugador
      summary: Buscar jugador por nombre de usuario
      operationId: findJugadorByJugadorName
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Jugador encontrado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JugadorDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Jugador no encontrado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/solicitudes:
    get:
      tags:
      - Jugador
      summary: Buscar solicitudes por ID de usuario
      operationId: findSolicitudesByUserId
      responses:
        "200":
          description: Solicitudes encontradas
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JugadorDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/amigos:
    get:
      tags:
      - Jugador
      summary: Buscar amigos por ID de usuario
      operationId: findAmigosByUserId
      parameters:
      - name: userId
        in: query
        description: ID del usuario
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Amigos encontrados
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JugadorDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/fotos/trofeos:
    get:
      tags:
      - Fotos
      summary: Obtener todas las fotos de trofeos
      description: Devuelve una lista de nombres de fotos de trofeos.
      operationId: findAllTrofeosFotos
      responses:
        "200":
          description: Lista de nombres de fotos de trofeos
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/fotos/perfiles:
    get:
      tags:
      - Fotos
      summary: Obtener todas las fotos de perfiles
      description: Devuelve una lista de nombres de fotos de perfiles.
      operationId: findAllPerfilesFotos
      responses:
        "200":
          description: Lista de nombres de fotos de perfiles
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/estadisticas/ranking:
    get:
      tags:
      - Estadisticas
      summary: Obtener ranking global de jugadores
      operationId: getRankingGlobal
      responses:
        "200":
          description: Ranking global de jugadores
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JugadorVictorias'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/estadisticas/misEstadisticas:
    get:
      tags:
      - Estadisticas
      summary: Obtener mis estadísticas
      operationId: getMisEstadisticas
      responses:
        "200":
          description: Estadísticas del jugador
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstadisticaJugador'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/estadisticas/misEstadisticas/datosPorPartida:
    get:
      tags:
      - Estadisticas
      summary: Obtener mis estadísticas avanzadas por partida
      operationId: getMisEstadisticasAvanzado
      responses:
        "200":
          description: Estadísticas avanzadas del jugador por partida
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatosPorPartida'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/estadisticas/estadisticasJugador/{jugadorId}:
    get:
      tags:
      - Estadisticas
      summary: Obtener estadísticas de un jugador por ID
      operationId: getEstadisticasJugador
      parameters:
      - name: jugadorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Estadísticas del jugador
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstadisticaJugador'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Jugador no encontrado
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/estadisticas/estadisticasGlobales:
    get:
      tags:
      - Estadisticas
      summary: Obtener estadísticas globales
      operationId: getEstadisticasGlobales
      responses:
        "200":
          description: Estadísticas globales
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstadisticaGlobal'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/chat/{chatId}:
    get:
      tags:
      - Chat
      summary: Obtener mensajes de un chat específico
      operationId: getMensajesDe
      parameters:
      - name: chatId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Mensajes obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado para acceder a este chat
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Chat
      summary: Eliminar un chat específico
      operationId: eliminarChat
      parameters:
      - name: chatId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Chat eliminado correctamente
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Chat no encontrado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/chat/with/{userId}:
    get:
      tags:
      - Chat
      summary: Obtener chat con un usuario específico
      operationId: getChatOf
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Chat obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Usuario no encontrado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/chat/users/{chatId}:
    get:
      tags:
      - Chat
      summary: Obtener usuarios de un chat específico
      operationId: getUsersFromChat
      parameters:
      - name: chatId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Usuarios obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado para acceder a este chat
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/chat/unread:
    get:
      tags:
      - Chat
      summary: Obtener el número de mensajes no leídos
      operationId: getUnreadMessages
      responses:
        "200":
          description: Número de mensajes no leídos obtenido correctamente
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/chat/lastMessage/{chatId}:
    get:
      tags:
      - Chat
      summary: Obtener el último mensaje de un chat específico
      operationId: getLastMessageFrom
      parameters:
      - name: chatId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Último mensaje obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado para acceder a este chat
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/carta/id/{idCarta}:
    get:
      tags:
      - Cartas
      summary: Obtener una carta por su ID
      description: Devuelve una carta según el ID proporcionado
      operationId: findCartaById
      parameters:
      - name: idCarta
        in: path
        description: ID de la carta a obtener
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Carta encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carta'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Carta no encontrada
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Error interno del servidor
          content: {}
      security:
      - bearerAuth: []
  /api/v1/auth/validate:
    get:
      tags:
      - Autenticación
      summary: Validar token
      description: Valida un token JWT
      operationId: validateToken
      parameters:
      - name: token
        in: query
        description: El token JWT que será validado
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        "200":
          description: Token válido
          content:
            '*/*':
              schema:
                type: boolean
        "400":
          description: Token inválido
          content:
            '*/*':
              schema:
                type: boolean
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/profile/borrarMiCuenta:
    delete:
      tags:
      - CurrentUser
      summary: Borrar la cuenta del usuario actual
      operationId: borrarMiCuenta
      responses:
        "200":
          description: Cuenta borrada con éxito
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageResponse'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/salir:
    delete:
      tags:
      - PartidaJugador
      summary: Eliminar jugador de la partida
      operationId: eliminateJugadorPartida
      responses:
        "200":
          description: Jugador eliminado correctamente
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partidajugador/eliminarJugador/{jugadorId}:
    delete:
      tags:
      - PartidaJugador
      summary: Eliminar jugador de la partida por ID
      operationId: eliminateJugadorPartidaByJugadorId
      parameters:
      - name: jugadorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Jugador eliminado correctamente
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: No autorizado
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/partida/{codigo}:
    delete:
      tags:
      - Partida
      summary: Eliminar una partida por código
      operationId: deletePartida
      parameters:
      - name: codigo
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Partida eliminada con éxito
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/{userId}:
    delete:
      tags:
      - Jugador
      summary: Eliminar jugador por ID de usuario
      operationId: deleteJugadorWithUserId
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Jugador eliminado
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
  /api/v1/jugador/isSolicitado/{solicitadoId}:
    delete:
      tags:
      - Jugador
      summary: Eliminar solicitud
      operationId: deleteSolicitud
      parameters:
      - name: solicitadoId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Solicitud eliminada
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        timestamp:
          type: string
          format: date-time
        message:
          type: string
        description:
          type: string
    PartidaJugadorView:
      type: object
      properties:
        userName:
          type: string
        foto:
          type: string
        posicion:
          type: integer
          format: int32
        partidaId:
          type: integer
          format: int32
    Authorities:
      type: object
      properties:
        id:
          type: integer
          format: int32
        authority:
          type: string
    Chat:
      type: object
      properties:
        id:
          type: integer
          format: int32
        partida:
          $ref: '#/components/schemas/Partida'
        mensajes:
          type: array
          items:
            $ref: '#/components/schemas/Mensaje'
        chatUsuarios:
          type: array
          items:
            $ref: '#/components/schemas/ChatUsuario'
        usuarios:
          type: array
          items:
            $ref: '#/components/schemas/User'
    ChatUsuario:
      required:
      - chat
      - fecha
      - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/User'
        chat:
          $ref: '#/components/schemas/Chat'
        fecha:
          type: string
          format: date-time
    Mensaje:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contenido:
          type: string
        remitente:
          $ref: '#/components/schemas/User'
        fechaEnvio:
          type: string
          format: date-time
        chat:
          $ref: '#/components/schemas/Chat'
    Partida:
      required:
      - codigo
      - conFlor
      - puntosEquipo1
      - puntosEquipo2
      - puntosMaximos
      - visibilidad
      type: object
      properties:
        id:
          type: integer
          format: int32
        instanteInicio:
          type: string
          format: date-time
        instanteFin:
          type: string
          format: date-time
        numJugadores:
          type: integer
          format: int32
        codigo:
          type: string
        conFlor:
          type: boolean
        puntosMaximos:
          type: integer
          format: int32
        puntosEquipo1:
          type: integer
          format: int32
        puntosEquipo2:
          type: integer
          format: int32
        visibilidad:
          type: string
          enum:
          - PUBLICA
          - PRIVADA
        jugadorMano:
          type: integer
          format: int32
        estado:
          type: string
          enum:
          - ACTIVE
          - FINISHED
          - WAITING
    User:
      required:
      - authority
      - lastConnection
      - password
      - username
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
        authority:
          $ref: '#/components/schemas/Authorities'
        lastConnection:
          type: string
          format: date-time
        chatJugadores:
          type: array
          items:
            $ref: '#/components/schemas/ChatUsuario'
        connected:
          type: boolean
    Jugador:
      required:
      - firstName
      - lastName
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        photo:
          type: string
        amigos:
          type: array
          items:
            $ref: '#/components/schemas/Jugador'
        solicitudes:
          type: array
          items:
            $ref: '#/components/schemas/Jugador'
        user:
          $ref: '#/components/schemas/User'
    PerfilJugadorUsuario:
      type: object
      properties:
        jugador:
          $ref: '#/components/schemas/Jugador'
        user:
          $ref: '#/components/schemas/User'
    Logros:
      required:
      - descripcion
      - metrica
      - oculto
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 3
          type: string
        descripcion:
          type: string
        imagencita:
          type: string
        valor:
          minimum: 0
          type: integer
          format: int32
        metrica:
          type: string
          enum:
          - PARTIDAS_JUGADAS
          - TIEMPO_JUGADO
          - VICTORIAS
          - DERROTAS
          - PARTIDAS_A_2
          - PARTIDAS_A_4
          - PARTIDAS_A_6
          - NUMERO_FLORES
          - NUMERO_ENGANOS
          - QUIEROS
          - NO_QUIEROS
          - PARTIDAS_CON_FLOR
          - ATRAPADO
        oculto:
          type: boolean
        actualDescription:
          type: string
    MensajeDTO:
      type: object
      properties:
        contenido:
          type: string
        remitente:
          $ref: '#/components/schemas/UserDTO'
        fechaEnvio:
          type: string
          format: date-time
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        authority:
          $ref: '#/components/schemas/Authorities'
        lastConnection:
          type: string
          format: date-time
        isConnected:
          type: boolean
    SignupRequest:
      required:
      - authority
      - firstName
      - lastName
      - password
      - username
      type: object
      properties:
        username:
          type: string
        authority:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        photo:
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    JwtResponse:
      type: object
      properties:
        token:
          type: string
        type:
          type: string
        id:
          type: integer
          format: int32
        username:
          type: string
        roles:
          type: array
          items:
            type: string
    Carta:
      required:
      - poder
      - valor
      type: object
      properties:
        id:
          type: integer
          format: int32
        palo:
          type: string
          enum:
          - ESPADAS
          - BASTOS
          - COPAS
          - OROS
          - NADA
        valor:
          type: integer
          format: int32
        poder:
          type: integer
          format: int32
        foto:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    Page:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            type: object
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        unpaged:
          type: boolean
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        unsorted:
          type: boolean
        empty:
          type: boolean
        sorted:
          type: boolean
    JugadorDTO:
      required:
      - email
      - firstName
      - id
      - isConnected
      - lastName
      - photo
      - userName
      type: object
      properties:
        id:
          type: integer
          format: int32
        userName:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        photo:
          type: string
        isConnected:
          type: boolean
        amistad:
          type: string
          enum:
          - DESCONOCIDOS
          - AMIGOS
          - SOLICITADO
        ultimoMensaje:
          $ref: '#/components/schemas/MensajeDTO'
        mensajesSinLeer:
          type: integer
          format: int32
    PartidaJugadorDTO:
      required:
      - equipo
      - isCreator
      - posicion
      type: object
      properties:
        posicion:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/JugadorDTO'
        game:
          $ref: '#/components/schemas/Partida'
        equipo:
          type: string
          enum:
          - EQUIPO1
          - EQUIPO2
          - ESPECTADOR
        isCreator:
          type: boolean
    PartidaDTO:
      required:
      - codigo
      - creador
      - participantes
      - tipo
      - visibilidad
      type: object
      properties:
        codigo:
          type: string
        creador:
          type: string
        participantes:
          type: string
        tipo:
          type: string
        visibilidad:
          type: string
        inicio:
          type: string
        fin:
          type: string
    Mano:
      type: object
      properties:
        cartasDisp:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Carta'
        jugadorTurno:
          type: integer
          format: int32
        cartasLanzadasRonda:
          type: array
          items:
            $ref: '#/components/schemas/Carta'
        ganadoresRondas:
          type: array
          items:
            type: integer
            format: int32
        rondaActual:
          type: integer
          format: int32
        puntosTruco:
          type: integer
          format: int32
        puntosEnvido:
          type: integer
          format: int32
        puntosFlor:
          type: integer
          format: int32
        cartasLanzadasTotales:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Carta'
        esTrucoEnvidoFlor:
          type: integer
          format: int32
        equipoCantor:
          type: integer
          format: int32
        esperandoRespuesta:
          type: boolean
        jugadorIniciadorDelCanto:
          type: integer
          format: int32
        terminada:
          type: boolean
        puedeCantarTruco:
          type: boolean
        puedeCantarEnvido:
          type: boolean
        puedeCantarFlor:
          type: boolean
        listaTienenFlores:
          type: array
          items:
            type: boolean
        queEnvidoPuedeCantar:
          type: integer
          format: int32
        queFlorPuedeCantar:
          type: integer
          format: int32
        equipoGanadorEnvido:
          type: integer
          format: int32
        equipoGanadorFlor:
          type: integer
          format: int32
        tresMismoPalo:
          type: boolean
        ultimoMensaje:
          type: string
          enum:
          - TRUCO
          - RETRUCO
          - VALECUATRO
          - ENVIDO
          - REAL_ENVIDO
          - FALTA_ENVIDO
          - FLOR
          - CONTRAFLOR
          - CON_FLOR_ME_ACHICO
          - QUIERO
          - NO_QUIERO
          - SUBIR
          - LISTA_ENVIDOS
          - ENVIDO2
          - LISTA_ENVIDOS_FLOR
        estaMintiendo:
          type: boolean
        cartasNoBorradas:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Carta'
        constanteEnvido:
          type: integer
          format: int32
        puntosMaximosDelTruco:
          type: integer
          format: int32
        rondasMaximasGanables:
          type: integer
          format: int32
        envidosCadaJugador:
          type: array
          items:
            type: integer
            format: int32
        envidosFlorCadaJugador:
          type: array
          items:
            type: integer
            format: int32
        envidosCantados:
          type: array
          items:
            type: integer
            format: int32
        floresCantadas:
          type: integer
          format: int32
        partida:
          $ref: '#/components/schemas/Partida'
        maximosEnvido:
          type: integer
          format: int32
        maximosRealEnvido:
          type: integer
          format: int32
        maximosFaltaEnvido:
          type: integer
          format: int32
    JugadorVictorias:
      type: object
      properties:
        username:
          type: string
        victorias:
          type: integer
          format: int64
    EstadisticaJugador:
      type: object
      properties:
        partidasJugadas:
          type: integer
          format: int32
        tiempoJugado:
          type: integer
          format: int32
        victorias:
          type: integer
          format: int32
        derrotas:
          type: integer
          format: int32
        partidasA2:
          type: integer
          format: int32
        partidasA4:
          type: integer
          format: int32
        partidasA6:
          type: integer
          format: int32
        numeroFlores:
          type: integer
          format: int32
        numeroEnganos:
          type: integer
          format: int32
        quieros:
          type: integer
          format: int32
        noQuieros:
          type: integer
          format: int32
        partidasConFlor:
          type: integer
          format: int32
        atrapado:
          type: integer
          format: int32
    DatosPorPartida:
      type: object
      properties:
        victorioso:
          type: boolean
        fecha:
          type: string
          format: date-time
        conFlor:
          type: boolean
        floresCantadas:
          type: integer
          format: int32
        enganos:
          type: integer
          format: int32
        atrapados:
          type: integer
          format: int32
    EstadisticaGlobal:
      type: object
      properties:
        partidasJugadas:
          type: integer
          format: int32
        tiempoJugado:
          type: integer
          format: int32
        victorias:
          type: integer
          format: int32
        derrotas:
          type: integer
          format: int32
        partidasA2:
          type: integer
          format: int32
        partidasA4:
          type: integer
          format: int32
        partidasA6:
          type: integer
          format: int32
        numeroFlores:
          type: integer
          format: int32
        numeroEnganos:
          type: integer
          format: int32
        quieros:
          type: integer
          format: int32
        noQuieros:
          type: integer
          format: int32
        partidasConFlor:
          type: integer
          format: int32
        atrapado:
          type: integer
          format: int32
        jugadoresTotales:
          type: integer
          format: int32
    ChatDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        partida:
          $ref: '#/components/schemas/Partida'
        usuarios:
          type: array
          items:
            $ref: '#/components/schemas/UserDTO'
        mensajes:
          type: array
          items:
            $ref: '#/components/schemas/MensajeDTO'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
