{"ast":null,"code":"/*!\n * FilePondPluginFileEncode 2.1.14\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginFileEncode = factory());\n})(this, function () {\n  'use strict';\n\n  var DataURIWorker = function DataURIWorker() {\n    // route messages\n    self.onmessage = function (e) {\n      convert(e.data.message, function (response) {\n        self.postMessage({\n          id: e.data.id,\n          message: response\n        });\n      });\n    };\n\n    // convert file to data uri\n    var convert = function convert(options, cb) {\n      var file = options.file;\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        cb(reader.result.replace('data:', '').replace(/^.+,/, ''));\n      };\n      reader.readAsDataURL(file);\n    };\n  };\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n      utils = _ref.utils;\n    // get quick reference to Type utils\n    var Type = utils.Type,\n      createWorker = utils.createWorker,\n      createRoute = utils.createRoute,\n      isFile = utils.isFile;\n    var encode = function encode(_ref2) {\n      var name = _ref2.name,\n        file = _ref2.file;\n      return new Promise(function (resolve) {\n        var worker = createWorker(DataURIWorker);\n        worker.post({\n          file: file\n        }, function (data) {\n          resolve({\n            name: name,\n            data: data\n          });\n          worker.terminate();\n        });\n      });\n    };\n\n    // holds base64 strings till can be moved to item\n    var base64Cache = [];\n    addFilter('DID_CREATE_ITEM', function (item, _ref3) {\n      var query = _ref3.query;\n      if (!query('GET_ALLOW_FILE_ENCODE')) return;\n      item.extend('getFileEncodeBase64String', function () {\n        return base64Cache[item.id] && base64Cache[item.id].data;\n      });\n      item.extend('getFileEncodeDataURL', function () {\n        return base64Cache[item.id] && 'data:'.concat(item.fileType, ';base64,').concat(base64Cache[item.id].data);\n      });\n    });\n    addFilter('SHOULD_PREPARE_OUTPUT', function (shouldPrepareOutput, _ref4) {\n      var query = _ref4.query;\n      return new Promise(function (resolve) {\n        resolve(query('GET_ALLOW_FILE_ENCODE'));\n      });\n    });\n    addFilter('COMPLETE_PREPARE_OUTPUT', function (file, _ref5) {\n      var item = _ref5.item,\n        query = _ref5.query;\n      return new Promise(function (resolve) {\n        // if it's not a file or a list of files, continue\n        if (!query('GET_ALLOW_FILE_ENCODE') || !isFile(file) && !Array.isArray(file)) {\n          return resolve(file);\n        }\n\n        // store metadata settings for this cache\n        base64Cache[item.id] = {\n          metadata: item.getMetadata(),\n          data: null\n        };\n\n        // wait for all file items to be encoded\n        Promise.all((file instanceof Blob ? [{\n          name: null,\n          file: file\n        }] : file).map(encode)).then(function (dataItems) {\n          base64Cache[item.id].data = file instanceof Blob ? dataItems[0].data : dataItems;\n          resolve(file);\n        });\n      });\n    });\n\n    // called for each view that is created right after the 'create' method\n    addFilter('CREATE_VIEW', function (viewAPI) {\n      // get reference to created view\n      var is = viewAPI.is,\n        view = viewAPI.view,\n        query = viewAPI.query;\n\n      // only hook up to item view\n      if (!is('file-wrapper') || !query('GET_ALLOW_FILE_ENCODE')) {\n        return;\n      }\n      view.registerWriter(createRoute({\n        DID_PREPARE_OUTPUT: function DID_PREPARE_OUTPUT(_ref6) {\n          var root = _ref6.root,\n            action = _ref6.action;\n          // only do this if is not uploading async\n          if (query('IS_ASYNC')) {\n            return;\n          }\n          var item = query('GET_ITEM', action.id);\n          if (!item) return;\n\n          // extract base64 string\n          var cache = base64Cache[item.id];\n          var metadata = cache.metadata;\n          var data = cache.data;\n\n          // create JSON string from encoded data\n          var value = JSON.stringify({\n            id: item.id,\n            name: item.file.name,\n            type: item.file.type,\n            size: item.file.size,\n            metadata: metadata,\n            data: data\n          });\n\n          // for filepond < 4.13.0\n          if (root.ref.data) {\n            root.ref.data.value = value;\n          }\n          // newer versions\n          else {\n            root.dispatch('DID_DEFINE_VALUE', {\n              id: item.id,\n              value: value\n            });\n          }\n        },\n        DID_REMOVE_ITEM: function DID_REMOVE_ITEM(_ref7) {\n          var action = _ref7.action;\n          var item = query('GET_ITEM', action.id);\n          if (!item) return;\n          delete base64Cache[item.id];\n        }\n      }));\n    });\n    return {\n      options: {\n        // Enable or disable file encoding\n        allowFileEncode: [true, Type.BOOLEAN]\n      }\n    };\n  };\n\n  // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n  return plugin;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","self","FilePondPluginFileEncode","DataURIWorker","onmessage","e","convert","data","message","response","postMessage","id","options","cb","file","reader","FileReader","onloadend","result","replace","readAsDataURL","plugin","_ref","addFilter","utils","Type","createWorker","createRoute","isFile","encode","_ref2","name","Promise","resolve","worker","post","terminate","base64Cache","item","_ref3","query","extend","concat","fileType","shouldPrepareOutput","_ref4","_ref5","Array","isArray","metadata","getMetadata","all","Blob","map","then","dataItems","viewAPI","is","view","registerWriter","DID_PREPARE_OUTPUT","_ref6","root","action","cache","value","JSON","stringify","type","size","ref","dispatch","DID_REMOVE_ITEM","_ref7","allowFileEncode","BOOLEAN","isBrowser","window","document","dispatchEvent","CustomEvent","detail"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/node_modules/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.js"],"sourcesContent":["/*!\n * FilePondPluginFileEncode 2.1.14\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\n(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? (module.exports = factory())\n        : typeof define === 'function' && define.amd\n        ? define(factory)\n        : ((global = global || self), (global.FilePondPluginFileEncode = factory()));\n})(this, function() {\n    'use strict';\n\n    var DataURIWorker = function DataURIWorker() {\n        // route messages\n        self.onmessage = function(e) {\n            convert(e.data.message, function(response) {\n                self.postMessage({ id: e.data.id, message: response });\n            });\n        };\n\n        // convert file to data uri\n        var convert = function convert(options, cb) {\n            var file = options.file;\n\n            var reader = new FileReader();\n            reader.onloadend = function() {\n                cb(reader.result.replace('data:', '').replace(/^.+,/, ''));\n            };\n            reader.readAsDataURL(file);\n        };\n    };\n\n    var plugin = function plugin(_ref) {\n        var addFilter = _ref.addFilter,\n            utils = _ref.utils;\n        // get quick reference to Type utils\n        var Type = utils.Type,\n            createWorker = utils.createWorker,\n            createRoute = utils.createRoute,\n            isFile = utils.isFile;\n\n        var encode = function encode(_ref2) {\n            var name = _ref2.name,\n                file = _ref2.file;\n            return new Promise(function(resolve) {\n                var worker = createWorker(DataURIWorker);\n                worker.post({ file: file }, function(data) {\n                    resolve({ name: name, data: data });\n                    worker.terminate();\n                });\n            });\n        };\n\n        // holds base64 strings till can be moved to item\n        var base64Cache = [];\n        addFilter('DID_CREATE_ITEM', function(item, _ref3) {\n            var query = _ref3.query;\n            if (!query('GET_ALLOW_FILE_ENCODE')) return;\n\n            item.extend('getFileEncodeBase64String', function() {\n                return base64Cache[item.id] && base64Cache[item.id].data;\n            });\n\n            item.extend('getFileEncodeDataURL', function() {\n                return (\n                    base64Cache[item.id] &&\n                    'data:'.concat(item.fileType, ';base64,').concat(base64Cache[item.id].data)\n                );\n            });\n        });\n\n        addFilter('SHOULD_PREPARE_OUTPUT', function(shouldPrepareOutput, _ref4) {\n            var query = _ref4.query;\n            return new Promise(function(resolve) {\n                resolve(query('GET_ALLOW_FILE_ENCODE'));\n            });\n        });\n\n        addFilter('COMPLETE_PREPARE_OUTPUT', function(file, _ref5) {\n            var item = _ref5.item,\n                query = _ref5.query;\n            return new Promise(function(resolve) {\n                // if it's not a file or a list of files, continue\n                if (!query('GET_ALLOW_FILE_ENCODE') || (!isFile(file) && !Array.isArray(file))) {\n                    return resolve(file);\n                }\n\n                // store metadata settings for this cache\n                base64Cache[item.id] = {\n                    metadata: item.getMetadata(),\n                    data: null,\n                };\n\n                // wait for all file items to be encoded\n                Promise.all(\n                    (file instanceof Blob ? [{ name: null, file: file }] : file).map(encode)\n                ).then(function(dataItems) {\n                    base64Cache[item.id].data =\n                        file instanceof Blob ? dataItems[0].data : dataItems;\n                    resolve(file);\n                });\n            });\n        });\n\n        // called for each view that is created right after the 'create' method\n        addFilter('CREATE_VIEW', function(viewAPI) {\n            // get reference to created view\n            var is = viewAPI.is,\n                view = viewAPI.view,\n                query = viewAPI.query;\n\n            // only hook up to item view\n            if (!is('file-wrapper') || !query('GET_ALLOW_FILE_ENCODE')) {\n                return;\n            }\n\n            view.registerWriter(\n                createRoute({\n                    DID_PREPARE_OUTPUT: function DID_PREPARE_OUTPUT(_ref6) {\n                        var root = _ref6.root,\n                            action = _ref6.action;\n                        // only do this if is not uploading async\n                        if (query('IS_ASYNC')) {\n                            return;\n                        }\n\n                        var item = query('GET_ITEM', action.id);\n                        if (!item) return;\n\n                        // extract base64 string\n                        var cache = base64Cache[item.id];\n                        var metadata = cache.metadata;\n                        var data = cache.data;\n\n                        // create JSON string from encoded data\n                        var value = JSON.stringify({\n                            id: item.id,\n                            name: item.file.name,\n                            type: item.file.type,\n                            size: item.file.size,\n                            metadata: metadata,\n                            data: data,\n                        });\n\n                        // for filepond < 4.13.0\n                        if (root.ref.data) {\n                            root.ref.data.value = value;\n                        }\n                        // newer versions\n                        else {\n                            root.dispatch('DID_DEFINE_VALUE', {\n                                id: item.id,\n                                value: value,\n                            });\n                        }\n                    },\n                    DID_REMOVE_ITEM: function DID_REMOVE_ITEM(_ref7) {\n                        var action = _ref7.action;\n                        var item = query('GET_ITEM', action.id);\n                        if (!item) return;\n                        delete base64Cache[item.id];\n                    },\n                })\n            );\n        });\n\n        return {\n            options: {\n                // Enable or disable file encoding\n                allowFileEncode: [true, Type.BOOLEAN],\n            },\n        };\n    };\n\n    // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n    if (isBrowser) {\n        document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n    }\n\n    return plugin;\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}