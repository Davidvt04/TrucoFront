{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Escritorio\\\\TrucoFront\\\\src\\\\components\\\\formGenerator\\\\inputs\\\\multiRangeSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/multiRangeSlider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiRangeSlider = ({\n  min,\n  max,\n  onChange,\n  sliderTrackColor\n}) => {\n  _s();\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef(null);\n\n  // Convert to percentage\n  const getPercent = useCallback(value => Math.round((value - min) / (max - min) * 100), [min, max]);\n\n  // Set width of the range to decrease from the left side\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n\n  // Set width of the range to decrease from the right side\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n\n  // Get min and max values when their state changes\n  useEffect(() => {\n    onChange({\n      min: minVal,\n      max: maxVal\n    });\n  }, [minVal, maxVal, onChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      onChange: event => {\n        const value = Math.min(Number(event.target.value), maxVal - 1);\n        setMinVal(value);\n        minValRef.current = value;\n      },\n      className: \"thumb thumb--left\",\n      style: {\n        zIndex: minVal > max - 100 && \"5\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      onChange: event => {\n        const value = Math.max(Number(event.target.value), minVal + 1);\n        setMaxVal(value);\n        maxValRef.current = value;\n      },\n      className: \"thumb thumb--right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: range,\n        className: \"slider__range\",\n        style: {\n          backgroundColor: `${sliderTrackColor}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__left-value\",\n        children: minVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__right-value\",\n        children: maxVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiRangeSlider, \"joEa1v1zaOhKGQUDNY+uJuhJ5cU=\");\n_c = MultiRangeSlider;\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default MultiRangeSlider;\nvar _c;\n$RefreshReg$(_c, \"MultiRangeSlider\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRef","PropTypes","jsxDEV","_jsxDEV","MultiRangeSlider","min","max","onChange","sliderTrackColor","_s","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","getPercent","value","Math","round","minPercent","maxPercent","current","style","left","width","className","children","type","event","Number","target","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","ref","backgroundColor","_c","propTypes","number","isRequired","func","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/src/components/formGenerator/inputs/multiRangeSlider.js"],"sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../css/multiRangeSlider.css\";\r\n\r\nconst MultiRangeSlider = ({ min, max, onChange, sliderTrackColor }) => {\r\n  const [minVal, setMinVal] = useState(min);\r\n  const [maxVal, setMaxVal] = useState(max);\r\n  const minValRef = useRef(min);\r\n  const maxValRef = useRef(max);\r\n  const range = useRef(null);\r\n\r\n  // Convert to percentage\r\n  const getPercent = useCallback(\r\n    (value) => Math.round(((value - min) / (max - min)) * 100),\r\n    [min, max]\r\n  );\r\n\r\n  // Set width of the range to decrease from the left side\r\n  useEffect(() => {\r\n    const minPercent = getPercent(minVal);\r\n    const maxPercent = getPercent(maxValRef.current);\r\n\r\n    if (range.current) {\r\n      range.current.style.left = `${minPercent}%`;\r\n      range.current.style.width = `${maxPercent - minPercent}%`;\r\n    }\r\n  }, [minVal, getPercent]);\r\n\r\n  // Set width of the range to decrease from the right side\r\n  useEffect(() => {\r\n    const minPercent = getPercent(minValRef.current);\r\n    const maxPercent = getPercent(maxVal);\r\n\r\n    if (range.current) {\r\n      range.current.style.width = `${maxPercent - minPercent}%`;\r\n    }\r\n  }, [maxVal, getPercent]);\r\n\r\n  // Get min and max values when their state changes\r\n  useEffect(() => {\r\n    onChange({ min: minVal, max: maxVal });\r\n  }, [minVal, maxVal, onChange]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={minVal}\r\n        onChange={(event) => {\r\n          const value = Math.min(Number(event.target.value), maxVal - 1);\r\n          setMinVal(value);\r\n          minValRef.current = value;\r\n        }}\r\n        className=\"thumb thumb--left\"\r\n        style={{ zIndex: minVal > max - 100 && \"5\" }}\r\n      />\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={maxVal}\r\n        onChange={(event) => {\r\n          const value = Math.max(Number(event.target.value), minVal + 1);\r\n          setMaxVal(value);\r\n          maxValRef.current = value;\r\n        }}\r\n        className=\"thumb thumb--right\"\r\n      />\r\n\r\n      <div className=\"slider\">\r\n        <div className=\"slider__track\"/>\r\n        <div ref={range} className=\"slider__range\" style={{backgroundColor: `${sliderTrackColor}`}}/>\r\n        <div className=\"slider__left-value\">{minVal}</div>\r\n        <div className=\"slider__right-value\">{maxVal}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiRangeSlider.propTypes = {\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default MultiRangeSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}