{"ast":null,"code":"export const formValidators = {\n  notEmptyValidator: {\n    validate: value => {\n      return value.trim().length > 0;\n    },\n    message: \"The field cannot be empty\"\n  },\n  telephoneValidator: {\n    validate: value => {\n      return value.trim().length === 9 && /^\\d+$/.test(value);\n    },\n    message: \"The telephone number must be 9 digits long and contain only numbers\"\n  },\n  notNoneTypeValidator: {\n    validate: value => {\n      return value !== \"None\";\n    },\n    message: \"Please, select a type\"\n  },\n  validPhoneNumberValidator: {\n    validate: value => {\n      return value.trim().length === 9 && /^\\d+$/.test(value);\n    },\n    message: \"The phone number must be 9 digits long and contain only numbers\"\n  }\n};","map":{"version":3,"names":["formValidators","notEmptyValidator","validate","value","trim","length","message","telephoneValidator","test","notNoneTypeValidator","validPhoneNumberValidator"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/src/validators/formValidators.js"],"sourcesContent":["export const formValidators = {\r\n    notEmptyValidator: {\r\n        validate: (value) => {\r\n            return value.trim().length > 0;\r\n        },\r\n        message: \"The field cannot be empty\"\r\n    },\r\n    telephoneValidator: {\r\n        validate: (value) => {\r\n            return value.trim().length === 9 && /^\\d+$/.test(value);\r\n        },\r\n        message: \"The telephone number must be 9 digits long and contain only numbers\"\r\n    },\r\n    notNoneTypeValidator: {\r\n        validate: (value) => {\r\n            return value !== \"None\";\r\n        },\r\n        message: \"Please, select a type\"\r\n    },\r\n    validPhoneNumberValidator: {\r\n        validate: (value) => {\r\n            return value.trim().length === 9 && /^\\d+$/.test(value);\r\n        },\r\n        message: \"The phone number must be 9 digits long and contain only numbers\"\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG;EAC1BC,iBAAiB,EAAE;IACfC,QAAQ,EAAGC,KAAK,IAAK;MACjB,OAAOA,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC;IAClC,CAAC;IACDC,OAAO,EAAE;EACb,CAAC;EACDC,kBAAkB,EAAE;IAChBL,QAAQ,EAAGC,KAAK,IAAK;MACjB,OAAOA,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,IAAI,OAAO,CAACG,IAAI,CAACL,KAAK,CAAC;IAC3D,CAAC;IACDG,OAAO,EAAE;EACb,CAAC;EACDG,oBAAoB,EAAE;IAClBP,QAAQ,EAAGC,KAAK,IAAK;MACjB,OAAOA,KAAK,KAAK,MAAM;IAC3B,CAAC;IACDG,OAAO,EAAE;EACb,CAAC;EACDI,yBAAyB,EAAE;IACvBR,QAAQ,EAAGC,KAAK,IAAK;MACjB,OAAOA,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,IAAI,OAAO,CAACG,IAAI,CAACL,KAAK,CAAC;IAC3D,CAAC;IACDG,OAAO,EAAE;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}