{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Escritorio\\\\TrucoFront\\\\src\\\\game\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport tokenService from \"../services/token.service.js\";\nimport WaitingModal from \"./WaitingModal.js\";\nimport PlayingModal from \"../manos/PlayingModal.js\";\nimport FinishedModal from \"./FinishedModal.js\";\nimport MessageList from \"../components/MessageList.js\";\nimport InputContainer from \"../components/InputContainer.js\";\nimport { IoChatboxEllipsesOutline } from \"react-icons/io5\";\nimport { IoCloseCircle } from \"react-icons/io5\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport shuiDef from '../static/audios/shuiDef.mp3';\nimport shiuDef from '../static/audios/shiuDef.mp3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst jwt = tokenService.getLocalAccessToken();\nexport default function Game() {\n  _s();\n  const currentUrl = window.location.href;\n  const codigo = currentUrl.split(\"partidaCode=\")[1].substring(0, 5);\n  const [game, setGame] = useState(null);\n  const [mensajes, setMensajes] = useState([]);\n  const [mensaje, setMensaje] = useState(\"\");\n  const stompClientRef = useRef(null);\n  const isConnectedRef = useRef(false);\n  const [chatView, setChatView] = useState(false);\n  const navigate = useNavigate();\n  const [visible, setVisible] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleErrorAndRedirect = errorMessage => {\n    setMessage(errorMessage);\n    setVisible(true);\n    setTimeout(() => {\n      navigate(\"/home\");\n    }, 3000);\n  };\n  useEffect(() => {\n    let intervalId;\n    async function fetchGame() {\n      try {\n        const response = await fetch(`https://trucobeasts-e0dxg3dvccd5dvb5.centralus-01.azurewebsites.net/api/v1/partida/search?codigo=${codigo}`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${jwt}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 404) {\n            handleErrorAndRedirect(\"Partida no encontrada, redirigiendo...\");\n          } else {\n            throw new Error(\"Error en la respuesta del servidor.\");\n          }\n        } else {\n          const data = await response.json();\n          setGame(data);\n          if (data.estado === \"FINISHED\") {\n            clearInterval(intervalId);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching partida:\", error);\n        if (!visible) {\n          setMessage(\"Error al obtener los datos de la partida.\");\n          setVisible(true);\n        }\n      }\n    }\n    fetchGame();\n    intervalId = setInterval(fetchGame, 1000);\n    return () => clearInterval(intervalId);\n  }, [codigo, navigate]);\n  useEffect(() => {\n    if (!isConnectedRef.current) {\n      connectToChat();\n    }\n    return () => {\n      if (stompClientRef.current) {\n        stompClientRef.current.deactivate();\n        isConnectedRef.current = false;\n      }\n    };\n  }, []);\n  function connectToChat() {\n    if (isConnectedRef.current) {\n      console.warn(\"Ya existe una conexión activa al servidor STOMP.\");\n      return;\n    }\n    const cliente = new Client({\n      brokerURL: \"ws://trucobeasts-e0dxg3dvccd5dvb5.centralus-01.azurewebsites.net/ws\",\n      connectHeaders: {\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n    cliente.onConnect = () => {\n      console.log(\"Conectado exitosamente al chat de partida \" + codigo);\n      isConnectedRef.current = true;\n      cliente.subscribe(`/topic/gamechat/${codigo}`, mensaje => {\n        console.log(\"Mensaje recibido: \", mensaje.body);\n        const nuevoMensaje = JSON.parse(mensaje.body);\n        setMensajes(prevMensajes => [...prevMensajes, nuevoMensaje]);\n      });\n    };\n    cliente.onDisconnect = () => {\n      console.log(\"Desconectado del servidor STOMP\");\n      isConnectedRef.current = false;\n    };\n    cliente.onStompError = frame => {\n      console.error(\"Error de STOMP: \", frame.headers[\"message\"]);\n      console.error(\"Detalles: \", frame.body);\n    };\n    cliente.activate();\n    stompClientRef.current = cliente;\n  }\n  const evtEnviarMensaje = () => {\n    const cliente = stompClientRef.current;\n    if (cliente && cliente.connected && mensaje.trim() !== \"\") {\n      cliente.publish({\n        destination: \"/app/mensajepartida\",\n        body: JSON.stringify({\n          contenido: mensaje,\n          chat: {\n            id: game.id,\n            partida: {\n              id: game.id,\n              codigo: codigo\n            }\n          },\n          remitente: {\n            id: tokenService.getUser().id,\n            username: tokenService.getUser().username,\n            lastConnection: new Date()\n          },\n          fechaEnvio: new Date()\n        }),\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"Mensaje enviado\");\n      setMensaje(\"\");\n    } else {\n      console.error(\"STOMP aún no está listo o no está conectado\");\n    }\n  };\n  const playEntrySound = () => {\n    const audio = new Audio(shuiDef); // path to your audio file\n    audio.play().catch(err => console.error(\"Audio play error:\", err));\n  };\n  const playExitSound = () => {\n    const audio = new Audio(shiuDef); // path to your audio file\n    audio.play().catch(err => console.error(\"Audio play error:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [game && game.estado === \"WAITING\" && /*#__PURE__*/_jsxDEV(WaitingModal, {\n      game: game\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 51\n    }, this), game && game.estado === \"ACTIVE\" && /*#__PURE__*/_jsxDEV(PlayingModal, {\n      game: game\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 50\n    }, this), game && game.estado === \"FINISHED\" && /*#__PURE__*/_jsxDEV(FinishedModal, {\n      game: game\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 52\n    }, this), game && game.estado !== \"FINISHED\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IoChatboxEllipsesOutline, {\n        style: {\n          position: 'fixed',\n          bottom: '20%',\n          right: '20px',\n          zIndex: 998,\n          color: 'yellow',\n          cursor: 'pointer',\n          fontSize: '48px'\n        },\n        onClick: () => setChatView(!chatView)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: chatView // controls when it is shown\n        ,\n        timeout: 300 // duration in ms (adjust as needed)\n        ,\n        classNames: \"slide-right\" // base name for our CSS classes\n        ,\n        unmountOnExit: true,\n        onEntered: playEntrySound,\n        onExited: playExitSound // play sound when done exiting\n        // This plays the sound once the modal has fully entered\n        // unmount the modal once hidden\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: 0,\n            right: 0,\n            height: '100%',\n            width: '35%',\n            backgroundColor: 'white',\n            backgroundImage: 'url(/fondos/fondoAmigosModal.png)',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            boxShadow: '-2px 0 5px rgba(0,0,0,0.5)',\n            zIndex: 15232300,\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(IoCloseCircle, {\n            style: {\n              cursor: 'pointer',\n              fontSize: '30px',\n              position: 'absolute',\n              top: '12px',\n              left: '10px',\n              color: \"rgb(123, 27, 0)\"\n            },\n            onClick: () => setChatView(!chatView)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"loginText\",\n            style: {\n              textAlign: 'center',\n              fontSize: '40px',\n              marginTop: '10px'\n            },\n            children: \"Chat de la partida\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              overflowY: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(MessageList, {\n              mensajes: mensajes,\n              userId: tokenService.getUser().id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'sticky',\n              bottom: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(InputContainer, {\n              mensaje: mensaje,\n              setMensaje: setMensaje,\n              evtEnviarMensaje: evtEnviarMensaje\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"SIzlDvDXgXEDAKJgvkl/3LnfS4Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","useRef","Client","tokenService","WaitingModal","PlayingModal","FinishedModal","MessageList","InputContainer","IoChatboxEllipsesOutline","IoCloseCircle","useNavigate","CSSTransition","shuiDef","shiuDef","jsxDEV","_jsxDEV","Fragment","_Fragment","jwt","getLocalAccessToken","Game","_s","currentUrl","window","location","href","codigo","split","substring","game","setGame","mensajes","setMensajes","mensaje","setMensaje","stompClientRef","isConnectedRef","chatView","setChatView","navigate","visible","setVisible","message","setMessage","handleErrorAndRedirect","errorMessage","setTimeout","intervalId","fetchGame","response","fetch","method","headers","Authorization","ok","status","Error","data","json","estado","clearInterval","error","console","setInterval","current","connectToChat","deactivate","warn","cliente","brokerURL","connectHeaders","onConnect","log","subscribe","body","nuevoMensaje","JSON","parse","prevMensajes","onDisconnect","onStompError","frame","activate","evtEnviarMensaje","connected","trim","publish","destination","stringify","contenido","chat","id","partida","remitente","getUser","username","lastConnection","Date","fechaEnvio","playEntrySound","audio","Audio","play","catch","err","playExitSound","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","bottom","right","zIndex","color","cursor","fontSize","onClick","in","timeout","classNames","unmountOnExit","onEntered","onExited","top","height","width","backgroundColor","backgroundImage","backgroundSize","backgroundRepeat","boxShadow","display","flexDirection","left","className","textAlign","marginTop","flex","overflowY","userId","_c","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/src/game/index.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport tokenService from \"../services/token.service.js\";\r\nimport WaitingModal from \"./WaitingModal.js\";\r\nimport PlayingModal from \"../manos/PlayingModal.js\";\r\nimport FinishedModal from \"./FinishedModal.js\";\r\nimport MessageList from \"../components/MessageList.js\";\r\nimport InputContainer from \"../components/InputContainer.js\";\r\nimport { IoChatboxEllipsesOutline } from \"react-icons/io5\";\r\nimport { IoCloseCircle } from \"react-icons/io5\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport shuiDef from '../static/audios/shuiDef.mp3';\r\nimport shiuDef from '../static/audios/shiuDef.mp3';\r\n\r\nconst jwt = tokenService.getLocalAccessToken();\r\n\r\nexport default function Game() {\r\n    const currentUrl = window.location.href;\r\n    const codigo = currentUrl.split(\"partidaCode=\")[1].substring(0, 5);\r\n    const [game, setGame] = useState(null);\r\n    const [mensajes, setMensajes] = useState([]);\r\n    const [mensaje, setMensaje] = useState(\"\");\r\n    const stompClientRef = useRef(null);\r\n    const isConnectedRef = useRef(false);\r\n    const [chatView, setChatView] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    \r\n    const handleErrorAndRedirect = (errorMessage) => {\r\n        setMessage(errorMessage);\r\n        setVisible(true);\r\n        setTimeout(() => {\r\n            navigate(\"/home\"); \r\n        }, 3000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let intervalId;\r\n\r\n        async function fetchGame() {\r\n            try {\r\n                const response = await fetch(\r\n                    `https://trucobeasts-e0dxg3dvccd5dvb5.centralus-01.azurewebsites.net/api/v1/partida/search?codigo=${codigo}`,\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: `Bearer ${jwt}`,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    if (response.status === 404) {\r\n                        handleErrorAndRedirect(\"Partida no encontrada, redirigiendo...\");\r\n                    } else {\r\n                        throw new Error(\"Error en la respuesta del servidor.\");\r\n                    }\r\n                } else {\r\n                    const data = await response.json();\r\n                    setGame(data);\r\n\r\n                    if (data.estado === \"FINISHED\") {\r\n                        clearInterval(intervalId); \r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching partida:\", error);\r\n                if (!visible) {\r\n                    setMessage(\"Error al obtener los datos de la partida.\");\r\n                    setVisible(true);\r\n                }\r\n            }\r\n        }\r\n\r\n         fetchGame();\r\n        intervalId = setInterval(fetchGame, 1000);\r\n\r\n        return () => clearInterval(intervalId); \r\n    }, [codigo, navigate]);\r\n\r\n    useEffect(() => {\r\n        if (!isConnectedRef.current) {\r\n            connectToChat();\r\n        }\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.deactivate();\r\n                isConnectedRef.current = false;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    function connectToChat() {\r\n        if (isConnectedRef.current) {\r\n            console.warn(\"Ya existe una conexión activa al servidor STOMP.\");\r\n            return;\r\n        }\r\n\r\n        const cliente = new Client({\r\n            brokerURL: \"ws://trucobeasts-e0dxg3dvccd5dvb5.centralus-01.azurewebsites.net/ws\",\r\n            connectHeaders: {\r\n                Authorization: `Bearer ${jwt}`,\r\n            },\r\n        });\r\n\r\n        cliente.onConnect = () => {\r\n            console.log(\"Conectado exitosamente al chat de partida \" + codigo);\r\n            isConnectedRef.current = true;\r\n\r\n            cliente.subscribe(`/topic/gamechat/${codigo}`, (mensaje) => {\r\n                console.log(\"Mensaje recibido: \", mensaje.body);\r\n                const nuevoMensaje = JSON.parse(mensaje.body);\r\n                setMensajes((prevMensajes) => [...prevMensajes, nuevoMensaje]);\r\n            });\r\n        };\r\n\r\n        cliente.onDisconnect = () => {\r\n            console.log(\"Desconectado del servidor STOMP\");\r\n            isConnectedRef.current = false;\r\n        };\r\n\r\n        cliente.onStompError = (frame) => {\r\n            console.error(\"Error de STOMP: \", frame.headers[\"message\"]);\r\n            console.error(\"Detalles: \", frame.body);\r\n        };\r\n\r\n        cliente.activate();\r\n        stompClientRef.current = cliente;\r\n    }\r\n\r\n    const evtEnviarMensaje = () => {\r\n        const cliente = stompClientRef.current;\r\n\r\n        if (cliente && cliente.connected && mensaje.trim() !== \"\") {\r\n            cliente.publish({\r\n                destination: \"/app/mensajepartida\",\r\n                body: JSON.stringify({\r\n                    contenido: mensaje,\r\n                    chat: {\r\n                        id: game.id,\r\n                        partida: { id: game.id, codigo: codigo },\r\n                    },\r\n                    remitente: {\r\n                        id: tokenService.getUser().id,\r\n                        username: tokenService.getUser().username,\r\n                        lastConnection: new Date(),\r\n                    },\r\n                    fechaEnvio:new Date(),\r\n                }),\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                },\r\n            });\r\n            console.log(\"Mensaje enviado\");\r\n            setMensaje(\"\");\r\n        } else {\r\n            console.error(\"STOMP aún no está listo o no está conectado\");\r\n        }\r\n    };\r\n    const playEntrySound = () => {\r\n        const audio = new Audio(shuiDef); // path to your audio file\r\n        audio.play().catch(err => console.error(\"Audio play error:\", err));\r\n      };\r\n      const playExitSound = () => {\r\n        const audio = new Audio(shiuDef); // path to your audio file\r\n        audio.play().catch(err => console.error(\"Audio play error:\", err));\r\n      };\r\n    return (\r\n        <div>\r\n            {game && game.estado === \"WAITING\" && <WaitingModal game={game} />}\r\n            {game && game.estado === \"ACTIVE\" && <PlayingModal game={game} />}\r\n            {game && game.estado === \"FINISHED\" && <FinishedModal game={game} />}\r\n            {game && game.estado !== \"FINISHED\" && (\r\n                <>\r\n                    <IoChatboxEllipsesOutline\r\n                        style={{\r\n                            position: 'fixed',\r\n                            bottom: '20%',\r\n                            right: '20px',\r\n                            zIndex: 998,\r\n                            color: 'yellow',\r\n                            cursor: 'pointer',\r\n                            fontSize: '48px',\r\n                        }}\r\n                        onClick={() => setChatView(!chatView)}\r\n                    />\r\n\r\n                      <CSSTransition\r\n                                in={chatView}               // controls when it is shown\r\n                                timeout={300}                  // duration in ms (adjust as needed)\r\n                                classNames=\"slide-right\"       // base name for our CSS classes\r\n                                unmountOnExit   \r\n                                onEntered={playEntrySound}\r\n                                onExited={playExitSound}       // play sound when done exiting\r\n                                // This plays the sound once the modal has fully entered\r\n                                // unmount the modal once hidden\r\n                                >\r\n                        <div style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            right: 0,\r\n                            height: '100%',\r\n                            width: '35%',\r\n                            backgroundColor: 'white',\r\n                            backgroundImage: 'url(/fondos/fondoAmigosModal.png)',\r\n                            backgroundSize: 'cover',\r\n                            backgroundRepeat: 'no-repeat',\r\n                            boxShadow: '-2px 0 5px rgba(0,0,0,0.5)',\r\n                            zIndex: 15232300,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                        }}>\r\n                            <IoCloseCircle\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    fontSize: '30px',\r\n                                    position: 'absolute',\r\n                                    top: '12px',\r\n                                    left: '10px',\r\n                                    color: \"rgb(123, 27, 0)\"\r\n                                }}\r\n                                onClick={() => setChatView(!chatView)} />\r\n                            <h1 className=\"loginText\" style={{ textAlign: 'center',fontSize:'40px', marginTop:'10px' }}>Chat de la partida</h1>\r\n                            <div style={{ flex: 1, overflowY: 'auto' }}>\r\n                                <MessageList mensajes={mensajes} userId={tokenService.getUser().id} />\r\n                            </div>\r\n                            <div style={{ position: 'sticky', bottom: 0 }}>\r\n                                <InputContainer\r\n                                    mensaje={mensaje}\r\n                                    setMensaje={setMensaje}\r\n                                    evtEnviarMensaje={evtEnviarMensaje}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                </CSSTransition>\r\n                </>\r\n            )}\r\n                    </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}