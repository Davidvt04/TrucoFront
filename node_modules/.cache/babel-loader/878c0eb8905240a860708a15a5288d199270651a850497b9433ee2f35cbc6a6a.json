{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Escritorio\\\\TrucoFront\\\\src\\\\components\\\\formGenerator\\\\formInput.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport MultiRangeSlider from './inputs/multiRangeSlider';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\nimport { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  tag,\n  name,\n  type,\n  defaultValue,\n  values,\n  isRequired,\n  numberOfColumns,\n  validators,\n  minValue,\n  maxValue,\n  onChange,\n  disabled,\n  // NEW PROP HERE:\n  labelStyle\n}, ref) => {\n  _s();\n  const [inputErrors, setInputErrors] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [minInputValue, setMinInputValue] = useState(minValue);\n  const [maxInputValue, setMaxInputValue] = useState(maxValue);\n  const inputField = useRef(null);\n  useImperativeHandle(ref, () => {\n    return {\n      setErrors: errors => {\n        setInputErrors(errors);\n      },\n      value: inputField.current ? inputField.current.value : \"\",\n      min: minInputValue,\n      max: maxInputValue,\n      files: files\n    };\n  });\n  function handleFiles(fileItems) {\n    setFiles(fileItems);\n  }\n  useEffect(() => {\n    if (type !== \"interval\" && type !== \"files\") {\n      // Attach an onChange listener to validate whenever the field changes\n      inputField.current.addEventListener(\"change\", () => {\n        let errors = [];\n        validators.forEach(validator => {\n          if (!validator.validate(inputField.current.value)) {\n            errors.push(validator.message);\n          }\n        });\n        setInputErrors(errors);\n        if (onChange !== null) {\n          onChange({\n            value: inputField.current.value\n          });\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  switch (type) {\n    case \"select\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `class-form-group ${inputErrors.length > 0 ? \"class-error-form\" : \"\"}`,\n        id: `${name}_form`,\n        style: numberOfColumns > 1 ? {\n          paddingTop: \"2%\",\n          width: `${100 / numberOfColumns - 3}%`\n        } : {\n          marginTop: \"7.5%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"class-form-input\",\n          disabled: disabled,\n          id: `${name}`,\n          name: `${name}`,\n          required: isRequired,\n          defaultValue: defaultValue,\n          ref: inputField,\n          children: values && values.map((option, index) => {\n            // \"selected\" is typically managed by defaultValue, so no need to do selected manually\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${name}`,\n          className: \"class-form-label\",\n          style: labelStyle,\n          children: [tag, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), inputErrors.length > 0 && inputErrors.map((error, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"class-error-message\",\n            children: error\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n    case \"textarea\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `class-form-group ${inputErrors.length > 0 ? \"class-error-form\" : \"\"}`,\n        id: `${name}_form`,\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"class-form-input\",\n          disabled: disabled,\n          type: type,\n          id: `${name}`,\n          name: `${name}`,\n          placeholder: \" \",\n          defaultValue: defaultValue ? defaultValue : \"\",\n          required: isRequired,\n          ref: inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${name}`,\n          className: \"class-form-label\",\n          style: labelStyle,\n          children: [tag, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), inputErrors.length > 0 && inputErrors.map((error, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"class-error-message\",\n            children: error\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this);\n    case \"interval\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `class-form-group interval-group d-flex justify-content-evenly ${inputErrors.length > 0 ? \"class-error-form\" : \"\"}`,\n        id: `${name}_form`,\n        style: numberOfColumns > 1 ? {\n          width: `${100 / numberOfColumns - 3}%`\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${name}`,\n          className: \"class-form-label\",\n          style: labelStyle,\n          children: [tag, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MultiRangeSlider, {\n          min: minValue,\n          max: maxValue,\n          onChange: ({\n            min,\n            max\n          }) => {\n            setMinInputValue(min);\n            setMaxInputValue(max);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this);\n    case \"files\":\n      registerPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginFileEncode);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `class-form-group files-group`,\n        id: `${name}_form`,\n        style: {\n          paddingTop: \"2%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${name}`,\n          className: \"class-form-label\",\n          style: labelStyle,\n          children: [tag, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FilePond, {\n          files: files,\n          onupdatefiles: handleFiles,\n          allowMultiple: true,\n          allowReorder: true,\n          maxFiles: 10,\n          name: name,\n          labelIdle: \"Arrastra tus archivos o <span class=\\\"filepond--label-action\\\">Selecciona</span>\",\n          credits: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this);\n    case \"date\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `class-form-group ${inputErrors.length > 0 ? \"class-error-form\" : \"\"}`,\n        id: `${name}_form`,\n        style: numberOfColumns > 1 ? {\n          paddingTop: \"2%\",\n          width: `${100 / numberOfColumns - 3}%`\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"class-form-input\",\n          disabled: disabled,\n          type: \"date\",\n          id: `${name}`,\n          name: `${name}`,\n          required: isRequired,\n          defaultValue: defaultValue,\n          ref: inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${name}`,\n          className: \"class-form-label\",\n          style: labelStyle,\n          children: [tag, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), inputErrors.length > 0 && inputErrors.map((error, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"class-error-message\",\n            children: error\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this);\n    default:\n      // typical text/password/email/number, etc.\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `class-form-group ${inputErrors.length > 0 ? \"class-error-form\" : \"\"}`,\n        id: `${name}_form`,\n        style: numberOfColumns > 1 ? {\n          width: `${100 / numberOfColumns - 3}%`\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"class-form-input\",\n          disabled: disabled,\n          type: type,\n          id: `${name}`,\n          name: `${name}`,\n          placeholder: \" \",\n          defaultValue: defaultValue ? defaultValue : \"\",\n          required: isRequired,\n          ref: inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${name}`,\n          className: \"class-form-label\",\n          style: labelStyle,\n          children: [tag, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), inputErrors.length > 0 && inputErrors.map((error, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"class-error-message\",\n            children: error\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this);\n  }\n}, \"ROKUCw/0eVobNURACwiPdtMBTn0=\")), \"ROKUCw/0eVobNURACwiPdtMBTn0=\");\n_c2 = FormInput;\nFormInput.propTypes = {\n  tag: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.oneOf([\"text\", \"password\", \"email\", \"number\", \"select\", \"textarea\", \"interval\", \"files\", \"date\", \"flatter-tags\", \"datetime-local\"]),\n  values: PropTypes.array,\n  defaultValue: PropTypes.string,\n  isRequired: PropTypes.bool,\n  minValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  numberOfColumns: PropTypes.number,\n  validators: PropTypes.array,\n  formValues: PropTypes.object,\n  setFormValues: PropTypes.func,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  // NEW:\n  labelStyle: PropTypes.object\n};\nFormInput.defaultProps = {\n  tag: \"default\",\n  name: \"default\",\n  type: \"text\",\n  defaultValue: \"\",\n  numberOfColumns: 1,\n  values: [],\n  isRequired: false,\n  minValue: 0,\n  maxValue: 100,\n  validators: [],\n  formValues: {},\n  setFormValues: () => {},\n  onChange: null,\n  disabled: false,\n  // NEW:\n  labelStyle: {}\n};\nexport default FormInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormInput$forwardRef\");\n$RefreshReg$(_c2, \"FormInput\");","map":{"version":3,"names":["PropTypes","MultiRangeSlider","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileEncode","useState","useEffect","useRef","forwardRef","useImperativeHandle","FilePond","registerPlugin","jsxDEV","_jsxDEV","FormInput","_s","_c","tag","name","type","defaultValue","values","isRequired","numberOfColumns","validators","minValue","maxValue","onChange","disabled","labelStyle","ref","inputErrors","setInputErrors","files","setFiles","minInputValue","setMinInputValue","maxInputValue","setMaxInputValue","inputField","setErrors","errors","value","current","min","max","handleFiles","fileItems","addEventListener","forEach","validator","validate","push","message","className","length","id","style","paddingTop","width","marginTop","children","required","map","option","index","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","error","placeholder","onupdatefiles","allowMultiple","allowReorder","maxFiles","labelIdle","credits","_c2","propTypes","string","oneOf","array","bool","number","formValues","object","setFormValues","func","defaultProps","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/src/components/formGenerator/formInput.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport MultiRangeSlider from './inputs/multiRangeSlider';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\r\n\r\nimport {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  forwardRef,\r\n  useImperativeHandle\r\n} from 'react';\r\n\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\n\r\nconst FormInput = forwardRef(\r\n  (\r\n    {\r\n      tag,\r\n      name,\r\n      type,\r\n      defaultValue,\r\n      values,\r\n      isRequired,\r\n      numberOfColumns,\r\n      validators,\r\n      minValue,\r\n      maxValue,\r\n      onChange,\r\n      disabled,\r\n      // NEW PROP HERE:\r\n      labelStyle\r\n    },\r\n    ref\r\n  ) => {\r\n    const [inputErrors, setInputErrors] = useState([]);\r\n    const [files, setFiles] = useState([]);\r\n    const [minInputValue, setMinInputValue] = useState(minValue);\r\n    const [maxInputValue, setMaxInputValue] = useState(maxValue);\r\n\r\n    const inputField = useRef(null);\r\n\r\n    useImperativeHandle(ref, () => {\r\n      return {\r\n        setErrors: (errors) => {\r\n          setInputErrors(errors);\r\n        },\r\n        value: inputField.current ? inputField.current.value : \"\",\r\n        min: minInputValue,\r\n        max: maxInputValue,\r\n        files: files\r\n      };\r\n    });\r\n\r\n    function handleFiles(fileItems) {\r\n      setFiles(fileItems);\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (type !== \"interval\" && type !== \"files\") {\r\n        // Attach an onChange listener to validate whenever the field changes\r\n        inputField.current.addEventListener(\"change\", () => {\r\n          let errors = [];\r\n          validators.forEach((validator) => {\r\n            if (!validator.validate(inputField.current.value)) {\r\n              errors.push(validator.message);\r\n            }\r\n          });\r\n          setInputErrors(errors);\r\n          if (onChange !== null) {\r\n            onChange({ value: inputField.current.value });\r\n          }\r\n        });\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    switch (type) {\r\n      case \"select\":\r\n        return (\r\n          <div\r\n            className={`class-form-group ${\r\n              inputErrors.length > 0 ? \"class-error-form\" : \"\"\r\n            }`}\r\n            id={`${name}_form`}\r\n            style={\r\n              numberOfColumns > 1\r\n                ? { paddingTop: \"2%\", width: `${100 / numberOfColumns - 3}%` }\r\n                : { marginTop: \"7.5%\" }\r\n            }\r\n          >\r\n            <select\r\n              className=\"class-form-input\"\r\n              disabled={disabled}\r\n              id={`${name}`}\r\n              name={`${name}`}\r\n              required={isRequired}\r\n              defaultValue={defaultValue}\r\n              ref={inputField}\r\n            >\r\n              {values &&\r\n                values.map((option, index) => {\r\n                  // \"selected\" is typically managed by defaultValue, so no need to do selected manually\r\n                  return (\r\n                    <option key={index} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {/* Apply the style prop to the label here */}\r\n            <label\r\n              htmlFor={`${name}`}\r\n              className=\"class-form-label\"\r\n              style={labelStyle}\r\n            >\r\n              {tag}:\r\n            </label>\r\n            {inputErrors.length > 0 &&\r\n              inputErrors.map((error, index) => {\r\n                return (\r\n                  <span key={index} className=\"class-error-message\">\r\n                    {error}\r\n                  </span>\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n\r\n      case \"textarea\":\r\n        return (\r\n          <div\r\n            className={`class-form-group ${\r\n              inputErrors.length > 0 ? \"class-error-form\" : \"\"\r\n            }`}\r\n            id={`${name}_form`}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <textarea\r\n              className=\"class-form-input\"\r\n              disabled={disabled}\r\n              type={type}\r\n              id={`${name}`}\r\n              name={`${name}`}\r\n              placeholder=\" \"\r\n              defaultValue={defaultValue ? defaultValue : \"\"}\r\n              required={isRequired}\r\n              ref={inputField}\r\n            />\r\n            <label\r\n              htmlFor={`${name}`}\r\n              className=\"class-form-label\"\r\n              style={labelStyle}\r\n            >\r\n              {tag}:\r\n            </label>\r\n            {inputErrors.length > 0 &&\r\n              inputErrors.map((error, index) => {\r\n                return (\r\n                  <span key={index} className=\"class-error-message\">\r\n                    {error}\r\n                  </span>\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n\r\n      case \"interval\":\r\n        return (\r\n          <div\r\n            className={`class-form-group interval-group d-flex justify-content-evenly ${\r\n              inputErrors.length > 0 ? \"class-error-form\" : \"\"\r\n            }`}\r\n            id={`${name}_form`}\r\n            style={\r\n              numberOfColumns > 1\r\n                ? { width: `${100 / numberOfColumns - 3}%` }\r\n                : {}\r\n            }\r\n          >\r\n            <label\r\n              htmlFor={`${name}`}\r\n              className=\"class-form-label\"\r\n              style={labelStyle}\r\n            >\r\n              {tag}:\r\n            </label>\r\n            <MultiRangeSlider\r\n              min={minValue}\r\n              max={maxValue}\r\n              onChange={({ min, max }) => {\r\n                setMinInputValue(min);\r\n                setMaxInputValue(max);\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case \"files\":\r\n        registerPlugin(\r\n          FilePondPluginImageExifOrientation,\r\n          FilePondPluginImagePreview,\r\n          FilePondPluginFileEncode\r\n        );\r\n\r\n        return (\r\n          <div\r\n            className={`class-form-group files-group`}\r\n            id={`${name}_form`}\r\n            style={{ paddingTop: \"2%\", width: \"100%\" }}\r\n          >\r\n            <label\r\n              htmlFor={`${name}`}\r\n              className=\"class-form-label\"\r\n              style={labelStyle}\r\n            >\r\n              {tag}:\r\n            </label>\r\n            <FilePond\r\n              files={files}\r\n              onupdatefiles={handleFiles}\r\n              allowMultiple={true}\r\n              allowReorder={true}\r\n              maxFiles={10}\r\n              name={name}\r\n              labelIdle='Arrastra tus archivos o <span class=\"filepond--label-action\">Selecciona</span>'\r\n              credits={false}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case \"date\":\r\n        return (\r\n          <div\r\n            className={`class-form-group ${\r\n              inputErrors.length > 0 ? \"class-error-form\" : \"\"\r\n            }`}\r\n            id={`${name}_form`}\r\n            style={\r\n              numberOfColumns > 1\r\n                ? { paddingTop: \"2%\", width: `${100 / numberOfColumns - 3}%` }\r\n                : {}\r\n            }\r\n          >\r\n            <input\r\n              className=\"class-form-input\"\r\n              disabled={disabled}\r\n              type=\"date\"\r\n              id={`${name}`}\r\n              name={`${name}`}\r\n              required={isRequired}\r\n              defaultValue={defaultValue}\r\n              ref={inputField}\r\n            />\r\n            <label\r\n              htmlFor={`${name}`}\r\n              className=\"class-form-label\"\r\n              style={labelStyle}\r\n            >\r\n              {tag}:\r\n            </label>\r\n            {inputErrors.length > 0 &&\r\n              inputErrors.map((error, index) => {\r\n                return (\r\n                  <span key={index} className=\"class-error-message\">\r\n                    {error}\r\n                  </span>\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        // typical text/password/email/number, etc.\r\n        return (\r\n          <div\r\n            className={`class-form-group ${\r\n              inputErrors.length > 0 ? \"class-error-form\" : \"\"\r\n            }`}\r\n            id={`${name}_form`}\r\n            style={\r\n              numberOfColumns > 1\r\n                ? { width: `${100 / numberOfColumns - 3}%` }\r\n                : {}\r\n            }\r\n          >\r\n            <input\r\n              className=\"class-form-input\"\r\n              disabled={disabled}\r\n              type={type}\r\n              id={`${name}`}\r\n              name={`${name}`}\r\n              placeholder=\" \"\r\n              defaultValue={defaultValue ? defaultValue : \"\"}\r\n              required={isRequired}\r\n              ref={inputField}\r\n            />\r\n            {/* APPLY the style to the label */}\r\n            <label\r\n              htmlFor={`${name}`}\r\n              className=\"class-form-label\"\r\n              style={labelStyle}\r\n            >\r\n              {tag}:\r\n            </label>\r\n            {inputErrors.length > 0 &&\r\n              inputErrors.map((error, index) => {\r\n                return (\r\n                  <span key={index} className=\"class-error-message\">\r\n                    {error}\r\n                  </span>\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n);\r\n\r\nFormInput.propTypes = {\r\n  tag: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.oneOf([\r\n    \"text\",\r\n    \"password\",\r\n    \"email\",\r\n    \"number\",\r\n    \"select\",\r\n    \"textarea\",\r\n    \"interval\",\r\n    \"files\",\r\n    \"date\",\r\n    \"flatter-tags\",\r\n    \"datetime-local\"\r\n  ]),\r\n  values: PropTypes.array,\r\n  defaultValue: PropTypes.string,\r\n  isRequired: PropTypes.bool,\r\n  minValue: PropTypes.number,\r\n  maxValue: PropTypes.number,\r\n  numberOfColumns: PropTypes.number,\r\n  validators: PropTypes.array,\r\n  formValues: PropTypes.object,\r\n  setFormValues: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  // NEW:\r\n  labelStyle: PropTypes.object\r\n};\r\n\r\nFormInput.defaultProps = {\r\n  tag: \"default\",\r\n  name: \"default\",\r\n  type: \"text\",\r\n  defaultValue: \"\",\r\n  numberOfColumns: 1,\r\n  values: [],\r\n  isRequired: false,\r\n  minValue: 0,\r\n  maxValue: 100,\r\n  validators: [],\r\n  formValues: {},\r\n  setFormValues: () => {},\r\n  onChange: null,\r\n  disabled: false,\r\n  // NEW:\r\n  labelStyle: {}\r\n};\r\n\r\nexport default FormInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}