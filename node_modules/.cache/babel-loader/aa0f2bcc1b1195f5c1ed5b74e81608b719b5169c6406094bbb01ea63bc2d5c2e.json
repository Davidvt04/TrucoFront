{"ast":null,"code":"export function calcularTiempo(tiemposEnSegundos, partidasTotales = 1) {\n  if (isNaN(tiemposEnSegundos) || tiemposEnSegundos < 0) {\n    return \"0 segundos\";\n  }\n  if (isNaN(partidasTotales) || partidasTotales <= 0) {\n    partidasTotales = 1;\n  }\n  let promedio = tiemposEnSegundos / partidasTotales;\n  let horas = Math.floor(promedio / 3600);\n  let minutos = Math.floor(promedio % 3600 / 60);\n  let segundos = Math.floor(promedio % 60);\n  let dias = Math.floor(horas / 24);\n  horas = horas % 24;\n  let años = Math.floor(dias / 365);\n  dias = dias % 365;\n  let tiempoFormateado = '';\n  if (años > 0) tiempoFormateado += comprobarSingular(años, 'años');\n  if (dias > 0) tiempoFormateado += `${tiempoFormateado ? ', ' : ''}${comprobarSingular(dias, \"dias\")}`;\n  if (horas > 0) tiempoFormateado += `${tiempoFormateado ? ', ' : ''}${comprobarSingular(horas, \"horas\")}`;\n  if (minutos > 0) tiempoFormateado += `${tiempoFormateado ? ', ' : ''}${comprobarSingular(minutos, \"minutos\")}`;\n  if (segundos > 0 || tiempoFormateado === '') {\n    tiempoFormateado += `${tiempoFormateado ? ' y ' : ''}${comprobarSingular(segundos, \"segundos\")}`;\n  }\n  return tiempoFormateado;\n}\nfunction comprobarSingular(data, texto) {\n  let res = data + \" \" + texto;\n  if (data === 1) {\n    res = res.replace(\"s\", \"\");\n  }\n  return res;\n}","map":{"version":3,"names":["calcularTiempo","tiemposEnSegundos","partidasTotales","isNaN","promedio","horas","Math","floor","minutos","segundos","dias","años","tiempoFormateado","comprobarSingular","data","texto","res","replace"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/src/estadisticas/calcularTiempo.js"],"sourcesContent":["export function calcularTiempo(tiemposEnSegundos, partidasTotales = 1) {\r\n    if (isNaN(tiemposEnSegundos) || tiemposEnSegundos < 0) {\r\n        return \"0 segundos\"; \r\n    }\r\n    if (isNaN(partidasTotales) || partidasTotales <= 0) {\r\n        partidasTotales = 1; \r\n    }\r\n    let promedio = tiemposEnSegundos / partidasTotales;\r\n\r\n    let horas = Math.floor(promedio / 3600);\r\n    let minutos = Math.floor((promedio % 3600) / 60);\r\n    let segundos = Math.floor(promedio % 60);\r\n\r\n    let dias = Math.floor(horas / 24);\r\n    horas = horas % 24; \r\n    let años = Math.floor(dias / 365);\r\n    dias = dias % 365; \r\n\r\n    \r\n    let tiempoFormateado = '';\r\n    if (años > 0) tiempoFormateado += comprobarSingular(años, 'años');\r\n    if (dias > 0) tiempoFormateado += `${tiempoFormateado ? ', ' : ''}${comprobarSingular(dias, \"dias\")}`;\r\n    if (horas > 0) tiempoFormateado += `${tiempoFormateado ? ', ' : ''}${comprobarSingular(horas, \"horas\")}`;\r\n    if (minutos > 0) tiempoFormateado += `${tiempoFormateado ? ', ' : ''}${comprobarSingular(minutos, \"minutos\")}`;\r\n    if (segundos > 0 || tiempoFormateado === '') {\r\n        tiempoFormateado += `${tiempoFormateado ? ' y ' : ''}${comprobarSingular(segundos, \"segundos\")}`;\r\n    }\r\n\r\n    return tiempoFormateado;\r\n}\r\n\r\n\r\nfunction comprobarSingular(data, texto){\r\n    let res = data +\" \"+ texto\r\n    if(data === 1){\r\n        res = res.replace(\"s\", \"\")\r\n    }\r\n    return res\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,iBAAiB,EAAEC,eAAe,GAAG,CAAC,EAAE;EACnE,IAAIC,KAAK,CAACF,iBAAiB,CAAC,IAAIA,iBAAiB,GAAG,CAAC,EAAE;IACnD,OAAO,YAAY;EACvB;EACA,IAAIE,KAAK,CAACD,eAAe,CAAC,IAAIA,eAAe,IAAI,CAAC,EAAE;IAChDA,eAAe,GAAG,CAAC;EACvB;EACA,IAAIE,QAAQ,GAAGH,iBAAiB,GAAGC,eAAe;EAElD,IAAIG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,GAAG,IAAI,CAAC;EACvC,IAAII,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,QAAQ,GAAG,IAAI,GAAI,EAAE,CAAC;EAChD,IAAIK,QAAQ,GAAGH,IAAI,CAACC,KAAK,CAACH,QAAQ,GAAG,EAAE,CAAC;EAExC,IAAIM,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACF,KAAK,GAAG,EAAE,CAAC;EACjCA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAClB,IAAIM,IAAI,GAAGL,IAAI,CAACC,KAAK,CAACG,IAAI,GAAG,GAAG,CAAC;EACjCA,IAAI,GAAGA,IAAI,GAAG,GAAG;EAGjB,IAAIE,gBAAgB,GAAG,EAAE;EACzB,IAAID,IAAI,GAAG,CAAC,EAAEC,gBAAgB,IAAIC,iBAAiB,CAACF,IAAI,EAAE,MAAM,CAAC;EACjE,IAAID,IAAI,GAAG,CAAC,EAAEE,gBAAgB,IAAI,GAAGA,gBAAgB,GAAG,IAAI,GAAG,EAAE,GAAGC,iBAAiB,CAACH,IAAI,EAAE,MAAM,CAAC,EAAE;EACrG,IAAIL,KAAK,GAAG,CAAC,EAAEO,gBAAgB,IAAI,GAAGA,gBAAgB,GAAG,IAAI,GAAG,EAAE,GAAGC,iBAAiB,CAACR,KAAK,EAAE,OAAO,CAAC,EAAE;EACxG,IAAIG,OAAO,GAAG,CAAC,EAAEI,gBAAgB,IAAI,GAAGA,gBAAgB,GAAG,IAAI,GAAG,EAAE,GAAGC,iBAAiB,CAACL,OAAO,EAAE,SAAS,CAAC,EAAE;EAC9G,IAAIC,QAAQ,GAAG,CAAC,IAAIG,gBAAgB,KAAK,EAAE,EAAE;IACzCA,gBAAgB,IAAI,GAAGA,gBAAgB,GAAG,KAAK,GAAG,EAAE,GAAGC,iBAAiB,CAACJ,QAAQ,EAAE,UAAU,CAAC,EAAE;EACpG;EAEA,OAAOG,gBAAgB;AAC3B;AAGA,SAASC,iBAAiBA,CAACC,IAAI,EAAEC,KAAK,EAAC;EACnC,IAAIC,GAAG,GAAGF,IAAI,GAAE,GAAG,GAAEC,KAAK;EAC1B,IAAGD,IAAI,KAAK,CAAC,EAAC;IACVE,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EAC9B;EACA,OAAOD,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}