{"ast":null,"code":"export const percentEncodeChar = char => {\n  if (typeof char !== 'string' || [...char].length !== 1) {\n    throw new TypeError('Input must be a single character string.');\n  }\n  const codePoint = char.codePointAt(0);\n  if (codePoint <= 0x7f) {\n    // ASCII range: Encode as %XX\n    return `%${codePoint.toString(16).toUpperCase().padStart(2, '0')}`;\n  } else {\n    // Non-ASCII range: Use encodeURIComponent to handle UTF-8 encoding\n    return encodeURIComponent(char);\n  }\n};\nexport const identity = a => a;\nexport const noop = () => {};","map":{"version":3,"names":["percentEncodeChar","char","length","TypeError","codePoint","codePointAt","toString","toUpperCase","padStart","encodeURIComponent","identity","a","noop"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/node_modules/@swaggerexpert/cookie/es/utils.mjs"],"sourcesContent":["export const percentEncodeChar = char => {\n  if (typeof char !== 'string' || [...char].length !== 1) {\n    throw new TypeError('Input must be a single character string.');\n  }\n  const codePoint = char.codePointAt(0);\n  if (codePoint <= 0x7f) {\n    // ASCII range: Encode as %XX\n    return `%${codePoint.toString(16).toUpperCase().padStart(2, '0')}`;\n  } else {\n    // Non-ASCII range: Use encodeURIComponent to handle UTF-8 encoding\n    return encodeURIComponent(char);\n  }\n};\nexport const identity = a => a;\nexport const noop = () => {};"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAGC,IAAI,IAAI;EACvC,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAAC,GAAGA,IAAI,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IACtD,MAAM,IAAIC,SAAS,CAAC,0CAA0C,CAAC;EACjE;EACA,MAAMC,SAAS,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;EACrC,IAAID,SAAS,IAAI,IAAI,EAAE;IACrB;IACA,OAAO,IAAIA,SAAS,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACpE,CAAC,MAAM;IACL;IACA,OAAOC,kBAAkB,CAACR,IAAI,CAAC;EACjC;AACF,CAAC;AACD,OAAO,MAAMS,QAAQ,GAAGC,CAAC,IAAIA,CAAC;AAC9B,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}