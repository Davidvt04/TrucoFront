{"ast":null,"code":"// copyright: Copyright (c) 2024 Lowell D. Thomas, all rights reserved<br>\n//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>\n//\n// Generated by apg-js, Version 4.4.0 [apg-js](https://github.com/ldthomas/apg-js)\nexport default function grammar() {\n  // ```\n  // SUMMARY\n  //      rules = 13\n  //       udts = 0\n  //    opcodes = 65\n  //        ---   ABNF original opcodes\n  //        ALT = 7\n  //        CAT = 4\n  //        REP = 5\n  //        RNM = 16\n  //        TLS = 27\n  //        TBS = 1\n  //        TRG = 5\n  //        ---   SABNF superset opcodes\n  //        UDT = 0\n  //        AND = 0\n  //        NOT = 0\n  // characters = [0 - 1114111]\n  // ```\n  /* OBJECT IDENTIFIER (for internal parser use) */\n  this.grammarObject = 'grammarObject';\n\n  /* RULES */\n  this.rules = [];\n  this.rules[0] = {\n    name: 'path-template',\n    lower: 'path-template',\n    index: 0,\n    isBkr: false\n  };\n  this.rules[1] = {\n    name: 'path-segment',\n    lower: 'path-segment',\n    index: 1,\n    isBkr: false\n  };\n  this.rules[2] = {\n    name: 'slash',\n    lower: 'slash',\n    index: 2,\n    isBkr: false\n  };\n  this.rules[3] = {\n    name: 'path-literal',\n    lower: 'path-literal',\n    index: 3,\n    isBkr: false\n  };\n  this.rules[4] = {\n    name: 'template-expression',\n    lower: 'template-expression',\n    index: 4,\n    isBkr: false\n  };\n  this.rules[5] = {\n    name: 'template-expression-param-name',\n    lower: 'template-expression-param-name',\n    index: 5,\n    isBkr: false\n  };\n  this.rules[6] = {\n    name: 'pchar',\n    lower: 'pchar',\n    index: 6,\n    isBkr: false\n  };\n  this.rules[7] = {\n    name: 'unreserved',\n    lower: 'unreserved',\n    index: 7,\n    isBkr: false\n  };\n  this.rules[8] = {\n    name: 'pct-encoded',\n    lower: 'pct-encoded',\n    index: 8,\n    isBkr: false\n  };\n  this.rules[9] = {\n    name: 'sub-delims',\n    lower: 'sub-delims',\n    index: 9,\n    isBkr: false\n  };\n  this.rules[10] = {\n    name: 'ALPHA',\n    lower: 'alpha',\n    index: 10,\n    isBkr: false\n  };\n  this.rules[11] = {\n    name: 'DIGIT',\n    lower: 'digit',\n    index: 11,\n    isBkr: false\n  };\n  this.rules[12] = {\n    name: 'HEXDIG',\n    lower: 'hexdig',\n    index: 12,\n    isBkr: false\n  };\n\n  /* UDTS */\n  this.udts = [];\n\n  /* OPCODES */\n  /* path-template */\n  this.rules[0].opcodes = [];\n  this.rules[0].opcodes[0] = {\n    type: 2,\n    children: [1, 2, 6]\n  }; // CAT\n  this.rules[0].opcodes[1] = {\n    type: 4,\n    index: 2\n  }; // RNM(slash)\n  this.rules[0].opcodes[2] = {\n    type: 3,\n    min: 0,\n    max: Infinity\n  }; // REP\n  this.rules[0].opcodes[3] = {\n    type: 2,\n    children: [4, 5]\n  }; // CAT\n  this.rules[0].opcodes[4] = {\n    type: 4,\n    index: 1\n  }; // RNM(path-segment)\n  this.rules[0].opcodes[5] = {\n    type: 4,\n    index: 2\n  }; // RNM(slash)\n  this.rules[0].opcodes[6] = {\n    type: 3,\n    min: 0,\n    max: 1\n  }; // REP\n  this.rules[0].opcodes[7] = {\n    type: 4,\n    index: 1\n  }; // RNM(path-segment)\n\n  /* path-segment */\n  this.rules[1].opcodes = [];\n  this.rules[1].opcodes[0] = {\n    type: 3,\n    min: 1,\n    max: Infinity\n  }; // REP\n  this.rules[1].opcodes[1] = {\n    type: 1,\n    children: [2, 3]\n  }; // ALT\n  this.rules[1].opcodes[2] = {\n    type: 4,\n    index: 3\n  }; // RNM(path-literal)\n  this.rules[1].opcodes[3] = {\n    type: 4,\n    index: 4\n  }; // RNM(template-expression)\n\n  /* slash */\n  this.rules[2].opcodes = [];\n  this.rules[2].opcodes[0] = {\n    type: 7,\n    string: [47]\n  }; // TLS\n\n  /* path-literal */\n  this.rules[3].opcodes = [];\n  this.rules[3].opcodes[0] = {\n    type: 3,\n    min: 1,\n    max: Infinity\n  }; // REP\n  this.rules[3].opcodes[1] = {\n    type: 4,\n    index: 6\n  }; // RNM(pchar)\n\n  /* template-expression */\n  this.rules[4].opcodes = [];\n  this.rules[4].opcodes[0] = {\n    type: 2,\n    children: [1, 2, 3]\n  }; // CAT\n  this.rules[4].opcodes[1] = {\n    type: 7,\n    string: [123]\n  }; // TLS\n  this.rules[4].opcodes[2] = {\n    type: 4,\n    index: 5\n  }; // RNM(template-expression-param-name)\n  this.rules[4].opcodes[3] = {\n    type: 7,\n    string: [125]\n  }; // TLS\n\n  /* template-expression-param-name */\n  this.rules[5].opcodes = [];\n  this.rules[5].opcodes[0] = {\n    type: 3,\n    min: 1,\n    max: Infinity\n  }; // REP\n  this.rules[5].opcodes[1] = {\n    type: 1,\n    children: [2, 3, 4]\n  }; // ALT\n  this.rules[5].opcodes[2] = {\n    type: 5,\n    min: 0,\n    max: 122\n  }; // TRG\n  this.rules[5].opcodes[3] = {\n    type: 6,\n    string: [124]\n  }; // TBS\n  this.rules[5].opcodes[4] = {\n    type: 5,\n    min: 126,\n    max: 1114111\n  }; // TRG\n\n  /* pchar */\n  this.rules[6].opcodes = [];\n  this.rules[6].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5]\n  }; // ALT\n  this.rules[6].opcodes[1] = {\n    type: 4,\n    index: 7\n  }; // RNM(unreserved)\n  this.rules[6].opcodes[2] = {\n    type: 4,\n    index: 8\n  }; // RNM(pct-encoded)\n  this.rules[6].opcodes[3] = {\n    type: 4,\n    index: 9\n  }; // RNM(sub-delims)\n  this.rules[6].opcodes[4] = {\n    type: 7,\n    string: [58]\n  }; // TLS\n  this.rules[6].opcodes[5] = {\n    type: 7,\n    string: [64]\n  }; // TLS\n\n  /* unreserved */\n  this.rules[7].opcodes = [];\n  this.rules[7].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5, 6]\n  }; // ALT\n  this.rules[7].opcodes[1] = {\n    type: 4,\n    index: 10\n  }; // RNM(ALPHA)\n  this.rules[7].opcodes[2] = {\n    type: 4,\n    index: 11\n  }; // RNM(DIGIT)\n  this.rules[7].opcodes[3] = {\n    type: 7,\n    string: [45]\n  }; // TLS\n  this.rules[7].opcodes[4] = {\n    type: 7,\n    string: [46]\n  }; // TLS\n  this.rules[7].opcodes[5] = {\n    type: 7,\n    string: [95]\n  }; // TLS\n  this.rules[7].opcodes[6] = {\n    type: 7,\n    string: [126]\n  }; // TLS\n\n  /* pct-encoded */\n  this.rules[8].opcodes = [];\n  this.rules[8].opcodes[0] = {\n    type: 2,\n    children: [1, 2, 3]\n  }; // CAT\n  this.rules[8].opcodes[1] = {\n    type: 7,\n    string: [37]\n  }; // TLS\n  this.rules[8].opcodes[2] = {\n    type: 4,\n    index: 12\n  }; // RNM(HEXDIG)\n  this.rules[8].opcodes[3] = {\n    type: 4,\n    index: 12\n  }; // RNM(HEXDIG)\n\n  /* sub-delims */\n  this.rules[9].opcodes = [];\n  this.rules[9].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n  }; // ALT\n  this.rules[9].opcodes[1] = {\n    type: 7,\n    string: [33]\n  }; // TLS\n  this.rules[9].opcodes[2] = {\n    type: 7,\n    string: [36]\n  }; // TLS\n  this.rules[9].opcodes[3] = {\n    type: 7,\n    string: [38]\n  }; // TLS\n  this.rules[9].opcodes[4] = {\n    type: 7,\n    string: [39]\n  }; // TLS\n  this.rules[9].opcodes[5] = {\n    type: 7,\n    string: [40]\n  }; // TLS\n  this.rules[9].opcodes[6] = {\n    type: 7,\n    string: [41]\n  }; // TLS\n  this.rules[9].opcodes[7] = {\n    type: 7,\n    string: [42]\n  }; // TLS\n  this.rules[9].opcodes[8] = {\n    type: 7,\n    string: [43]\n  }; // TLS\n  this.rules[9].opcodes[9] = {\n    type: 7,\n    string: [44]\n  }; // TLS\n  this.rules[9].opcodes[10] = {\n    type: 7,\n    string: [59]\n  }; // TLS\n  this.rules[9].opcodes[11] = {\n    type: 7,\n    string: [61]\n  }; // TLS\n\n  /* ALPHA */\n  this.rules[10].opcodes = [];\n  this.rules[10].opcodes[0] = {\n    type: 1,\n    children: [1, 2]\n  }; // ALT\n  this.rules[10].opcodes[1] = {\n    type: 5,\n    min: 65,\n    max: 90\n  }; // TRG\n  this.rules[10].opcodes[2] = {\n    type: 5,\n    min: 97,\n    max: 122\n  }; // TRG\n\n  /* DIGIT */\n  this.rules[11].opcodes = [];\n  this.rules[11].opcodes[0] = {\n    type: 5,\n    min: 48,\n    max: 57\n  }; // TRG\n\n  /* HEXDIG */\n  this.rules[12].opcodes = [];\n  this.rules[12].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5, 6, 7]\n  }; // ALT\n  this.rules[12].opcodes[1] = {\n    type: 4,\n    index: 11\n  }; // RNM(DIGIT)\n  this.rules[12].opcodes[2] = {\n    type: 7,\n    string: [97]\n  }; // TLS\n  this.rules[12].opcodes[3] = {\n    type: 7,\n    string: [98]\n  }; // TLS\n  this.rules[12].opcodes[4] = {\n    type: 7,\n    string: [99]\n  }; // TLS\n  this.rules[12].opcodes[5] = {\n    type: 7,\n    string: [100]\n  }; // TLS\n  this.rules[12].opcodes[6] = {\n    type: 7,\n    string: [101]\n  }; // TLS\n  this.rules[12].opcodes[7] = {\n    type: 7,\n    string: [102]\n  }; // TLS\n\n  // The `toString()` function will display the original grammar file(s) that produced these opcodes.\n  this.toString = function toString() {\n    let str = \"\";\n    str += \"; OpenAPI Path Templating ABNF syntax\\n\";\n    str += \"; variant of https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\\n\";\n    str += \"path-template                  = slash *( path-segment slash ) [ path-segment ]\\n\";\n    str += \"path-segment                   = 1*( path-literal / template-expression )\\n\";\n    str += \"slash                          = \\\"/\\\"\\n\";\n    str += \"path-literal                   = 1*pchar\\n\";\n    str += \"template-expression            = \\\"{\\\" template-expression-param-name \\\"}\\\"\\n\";\n    str += \"template-expression-param-name = 1*( %x00-7A / %x7C / %x7E-10FFFF ) ; every UTF8 character except { and } (from OpenAPI)\\n\";\n    str += \"\\n\";\n    str += \"; https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\\n\";\n    str += \"pchar               = unreserved / pct-encoded / sub-delims / \\\":\\\" / \\\"@\\\"\\n\";\n    str += \"unreserved          = ALPHA / DIGIT / \\\"-\\\" / \\\".\\\" / \\\"_\\\" / \\\"~\\\"\\n\";\n    str += \"                    ; https://datatracker.ietf.org/doc/html/rfc3986#section-2.3\\n\";\n    str += \"pct-encoded         = \\\"%\\\" HEXDIG HEXDIG\\n\";\n    str += \"                    ; https://datatracker.ietf.org/doc/html/rfc3986#section-2.1\\n\";\n    str += \"sub-delims          = \\\"!\\\" / \\\"$\\\" / \\\"&\\\" / \\\"'\\\" / \\\"(\\\" / \\\")\\\"\\n\";\n    str += \"                    / \\\"*\\\" / \\\"+\\\" / \\\",\\\" / \\\";\\\" / \\\"=\\\"\\n\";\n    str += \"                    ; https://datatracker.ietf.org/doc/html/rfc3986#section-2.2\\n\";\n    str += \"\\n\";\n    str += \"; https://datatracker.ietf.org/doc/html/rfc5234#appendix-B.1\\n\";\n    str += \"ALPHA               = %x41-5A / %x61-7A   ; A-Z / a-z\\n\";\n    str += \"DIGIT               = %x30-39            ; 0-9\\n\";\n    str += \"HEXDIG              = DIGIT / \\\"A\\\" / \\\"B\\\" / \\\"C\\\" / \\\"D\\\" / \\\"E\\\" / \\\"F\\\"\\n\";\n    return str;\n  };\n}","map":{"version":3,"names":["grammar","grammarObject","rules","name","lower","index","isBkr","udts","opcodes","type","children","min","max","Infinity","string","toString","str"],"sources":["C:/Users/david/OneDrive/Escritorio/TrucoFront/node_modules/openapi-path-templating/es/path-templating.mjs"],"sourcesContent":["// copyright: Copyright (c) 2024 Lowell D. Thomas, all rights reserved<br>\n//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>\n//\n// Generated by apg-js, Version 4.4.0 [apg-js](https://github.com/ldthomas/apg-js)\nexport default function grammar() {\n  // ```\n  // SUMMARY\n  //      rules = 13\n  //       udts = 0\n  //    opcodes = 65\n  //        ---   ABNF original opcodes\n  //        ALT = 7\n  //        CAT = 4\n  //        REP = 5\n  //        RNM = 16\n  //        TLS = 27\n  //        TBS = 1\n  //        TRG = 5\n  //        ---   SABNF superset opcodes\n  //        UDT = 0\n  //        AND = 0\n  //        NOT = 0\n  // characters = [0 - 1114111]\n  // ```\n  /* OBJECT IDENTIFIER (for internal parser use) */\n  this.grammarObject = 'grammarObject';\n\n  /* RULES */\n  this.rules = [];\n  this.rules[0] = {\n    name: 'path-template',\n    lower: 'path-template',\n    index: 0,\n    isBkr: false\n  };\n  this.rules[1] = {\n    name: 'path-segment',\n    lower: 'path-segment',\n    index: 1,\n    isBkr: false\n  };\n  this.rules[2] = {\n    name: 'slash',\n    lower: 'slash',\n    index: 2,\n    isBkr: false\n  };\n  this.rules[3] = {\n    name: 'path-literal',\n    lower: 'path-literal',\n    index: 3,\n    isBkr: false\n  };\n  this.rules[4] = {\n    name: 'template-expression',\n    lower: 'template-expression',\n    index: 4,\n    isBkr: false\n  };\n  this.rules[5] = {\n    name: 'template-expression-param-name',\n    lower: 'template-expression-param-name',\n    index: 5,\n    isBkr: false\n  };\n  this.rules[6] = {\n    name: 'pchar',\n    lower: 'pchar',\n    index: 6,\n    isBkr: false\n  };\n  this.rules[7] = {\n    name: 'unreserved',\n    lower: 'unreserved',\n    index: 7,\n    isBkr: false\n  };\n  this.rules[8] = {\n    name: 'pct-encoded',\n    lower: 'pct-encoded',\n    index: 8,\n    isBkr: false\n  };\n  this.rules[9] = {\n    name: 'sub-delims',\n    lower: 'sub-delims',\n    index: 9,\n    isBkr: false\n  };\n  this.rules[10] = {\n    name: 'ALPHA',\n    lower: 'alpha',\n    index: 10,\n    isBkr: false\n  };\n  this.rules[11] = {\n    name: 'DIGIT',\n    lower: 'digit',\n    index: 11,\n    isBkr: false\n  };\n  this.rules[12] = {\n    name: 'HEXDIG',\n    lower: 'hexdig',\n    index: 12,\n    isBkr: false\n  };\n\n  /* UDTS */\n  this.udts = [];\n\n  /* OPCODES */\n  /* path-template */\n  this.rules[0].opcodes = [];\n  this.rules[0].opcodes[0] = {\n    type: 2,\n    children: [1, 2, 6]\n  }; // CAT\n  this.rules[0].opcodes[1] = {\n    type: 4,\n    index: 2\n  }; // RNM(slash)\n  this.rules[0].opcodes[2] = {\n    type: 3,\n    min: 0,\n    max: Infinity\n  }; // REP\n  this.rules[0].opcodes[3] = {\n    type: 2,\n    children: [4, 5]\n  }; // CAT\n  this.rules[0].opcodes[4] = {\n    type: 4,\n    index: 1\n  }; // RNM(path-segment)\n  this.rules[0].opcodes[5] = {\n    type: 4,\n    index: 2\n  }; // RNM(slash)\n  this.rules[0].opcodes[6] = {\n    type: 3,\n    min: 0,\n    max: 1\n  }; // REP\n  this.rules[0].opcodes[7] = {\n    type: 4,\n    index: 1\n  }; // RNM(path-segment)\n\n  /* path-segment */\n  this.rules[1].opcodes = [];\n  this.rules[1].opcodes[0] = {\n    type: 3,\n    min: 1,\n    max: Infinity\n  }; // REP\n  this.rules[1].opcodes[1] = {\n    type: 1,\n    children: [2, 3]\n  }; // ALT\n  this.rules[1].opcodes[2] = {\n    type: 4,\n    index: 3\n  }; // RNM(path-literal)\n  this.rules[1].opcodes[3] = {\n    type: 4,\n    index: 4\n  }; // RNM(template-expression)\n\n  /* slash */\n  this.rules[2].opcodes = [];\n  this.rules[2].opcodes[0] = {\n    type: 7,\n    string: [47]\n  }; // TLS\n\n  /* path-literal */\n  this.rules[3].opcodes = [];\n  this.rules[3].opcodes[0] = {\n    type: 3,\n    min: 1,\n    max: Infinity\n  }; // REP\n  this.rules[3].opcodes[1] = {\n    type: 4,\n    index: 6\n  }; // RNM(pchar)\n\n  /* template-expression */\n  this.rules[4].opcodes = [];\n  this.rules[4].opcodes[0] = {\n    type: 2,\n    children: [1, 2, 3]\n  }; // CAT\n  this.rules[4].opcodes[1] = {\n    type: 7,\n    string: [123]\n  }; // TLS\n  this.rules[4].opcodes[2] = {\n    type: 4,\n    index: 5\n  }; // RNM(template-expression-param-name)\n  this.rules[4].opcodes[3] = {\n    type: 7,\n    string: [125]\n  }; // TLS\n\n  /* template-expression-param-name */\n  this.rules[5].opcodes = [];\n  this.rules[5].opcodes[0] = {\n    type: 3,\n    min: 1,\n    max: Infinity\n  }; // REP\n  this.rules[5].opcodes[1] = {\n    type: 1,\n    children: [2, 3, 4]\n  }; // ALT\n  this.rules[5].opcodes[2] = {\n    type: 5,\n    min: 0,\n    max: 122\n  }; // TRG\n  this.rules[5].opcodes[3] = {\n    type: 6,\n    string: [124]\n  }; // TBS\n  this.rules[5].opcodes[4] = {\n    type: 5,\n    min: 126,\n    max: 1114111\n  }; // TRG\n\n  /* pchar */\n  this.rules[6].opcodes = [];\n  this.rules[6].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5]\n  }; // ALT\n  this.rules[6].opcodes[1] = {\n    type: 4,\n    index: 7\n  }; // RNM(unreserved)\n  this.rules[6].opcodes[2] = {\n    type: 4,\n    index: 8\n  }; // RNM(pct-encoded)\n  this.rules[6].opcodes[3] = {\n    type: 4,\n    index: 9\n  }; // RNM(sub-delims)\n  this.rules[6].opcodes[4] = {\n    type: 7,\n    string: [58]\n  }; // TLS\n  this.rules[6].opcodes[5] = {\n    type: 7,\n    string: [64]\n  }; // TLS\n\n  /* unreserved */\n  this.rules[7].opcodes = [];\n  this.rules[7].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5, 6]\n  }; // ALT\n  this.rules[7].opcodes[1] = {\n    type: 4,\n    index: 10\n  }; // RNM(ALPHA)\n  this.rules[7].opcodes[2] = {\n    type: 4,\n    index: 11\n  }; // RNM(DIGIT)\n  this.rules[7].opcodes[3] = {\n    type: 7,\n    string: [45]\n  }; // TLS\n  this.rules[7].opcodes[4] = {\n    type: 7,\n    string: [46]\n  }; // TLS\n  this.rules[7].opcodes[5] = {\n    type: 7,\n    string: [95]\n  }; // TLS\n  this.rules[7].opcodes[6] = {\n    type: 7,\n    string: [126]\n  }; // TLS\n\n  /* pct-encoded */\n  this.rules[8].opcodes = [];\n  this.rules[8].opcodes[0] = {\n    type: 2,\n    children: [1, 2, 3]\n  }; // CAT\n  this.rules[8].opcodes[1] = {\n    type: 7,\n    string: [37]\n  }; // TLS\n  this.rules[8].opcodes[2] = {\n    type: 4,\n    index: 12\n  }; // RNM(HEXDIG)\n  this.rules[8].opcodes[3] = {\n    type: 4,\n    index: 12\n  }; // RNM(HEXDIG)\n\n  /* sub-delims */\n  this.rules[9].opcodes = [];\n  this.rules[9].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n  }; // ALT\n  this.rules[9].opcodes[1] = {\n    type: 7,\n    string: [33]\n  }; // TLS\n  this.rules[9].opcodes[2] = {\n    type: 7,\n    string: [36]\n  }; // TLS\n  this.rules[9].opcodes[3] = {\n    type: 7,\n    string: [38]\n  }; // TLS\n  this.rules[9].opcodes[4] = {\n    type: 7,\n    string: [39]\n  }; // TLS\n  this.rules[9].opcodes[5] = {\n    type: 7,\n    string: [40]\n  }; // TLS\n  this.rules[9].opcodes[6] = {\n    type: 7,\n    string: [41]\n  }; // TLS\n  this.rules[9].opcodes[7] = {\n    type: 7,\n    string: [42]\n  }; // TLS\n  this.rules[9].opcodes[8] = {\n    type: 7,\n    string: [43]\n  }; // TLS\n  this.rules[9].opcodes[9] = {\n    type: 7,\n    string: [44]\n  }; // TLS\n  this.rules[9].opcodes[10] = {\n    type: 7,\n    string: [59]\n  }; // TLS\n  this.rules[9].opcodes[11] = {\n    type: 7,\n    string: [61]\n  }; // TLS\n\n  /* ALPHA */\n  this.rules[10].opcodes = [];\n  this.rules[10].opcodes[0] = {\n    type: 1,\n    children: [1, 2]\n  }; // ALT\n  this.rules[10].opcodes[1] = {\n    type: 5,\n    min: 65,\n    max: 90\n  }; // TRG\n  this.rules[10].opcodes[2] = {\n    type: 5,\n    min: 97,\n    max: 122\n  }; // TRG\n\n  /* DIGIT */\n  this.rules[11].opcodes = [];\n  this.rules[11].opcodes[0] = {\n    type: 5,\n    min: 48,\n    max: 57\n  }; // TRG\n\n  /* HEXDIG */\n  this.rules[12].opcodes = [];\n  this.rules[12].opcodes[0] = {\n    type: 1,\n    children: [1, 2, 3, 4, 5, 6, 7]\n  }; // ALT\n  this.rules[12].opcodes[1] = {\n    type: 4,\n    index: 11\n  }; // RNM(DIGIT)\n  this.rules[12].opcodes[2] = {\n    type: 7,\n    string: [97]\n  }; // TLS\n  this.rules[12].opcodes[3] = {\n    type: 7,\n    string: [98]\n  }; // TLS\n  this.rules[12].opcodes[4] = {\n    type: 7,\n    string: [99]\n  }; // TLS\n  this.rules[12].opcodes[5] = {\n    type: 7,\n    string: [100]\n  }; // TLS\n  this.rules[12].opcodes[6] = {\n    type: 7,\n    string: [101]\n  }; // TLS\n  this.rules[12].opcodes[7] = {\n    type: 7,\n    string: [102]\n  }; // TLS\n\n  // The `toString()` function will display the original grammar file(s) that produced these opcodes.\n  this.toString = function toString() {\n    let str = \"\";\n    str += \"; OpenAPI Path Templating ABNF syntax\\n\";\n    str += \"; variant of https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\\n\";\n    str += \"path-template                  = slash *( path-segment slash ) [ path-segment ]\\n\";\n    str += \"path-segment                   = 1*( path-literal / template-expression )\\n\";\n    str += \"slash                          = \\\"/\\\"\\n\";\n    str += \"path-literal                   = 1*pchar\\n\";\n    str += \"template-expression            = \\\"{\\\" template-expression-param-name \\\"}\\\"\\n\";\n    str += \"template-expression-param-name = 1*( %x00-7A / %x7C / %x7E-10FFFF ) ; every UTF8 character except { and } (from OpenAPI)\\n\";\n    str += \"\\n\";\n    str += \"; https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\\n\";\n    str += \"pchar               = unreserved / pct-encoded / sub-delims / \\\":\\\" / \\\"@\\\"\\n\";\n    str += \"unreserved          = ALPHA / DIGIT / \\\"-\\\" / \\\".\\\" / \\\"_\\\" / \\\"~\\\"\\n\";\n    str += \"                    ; https://datatracker.ietf.org/doc/html/rfc3986#section-2.3\\n\";\n    str += \"pct-encoded         = \\\"%\\\" HEXDIG HEXDIG\\n\";\n    str += \"                    ; https://datatracker.ietf.org/doc/html/rfc3986#section-2.1\\n\";\n    str += \"sub-delims          = \\\"!\\\" / \\\"$\\\" / \\\"&\\\" / \\\"'\\\" / \\\"(\\\" / \\\")\\\"\\n\";\n    str += \"                    / \\\"*\\\" / \\\"+\\\" / \\\",\\\" / \\\";\\\" / \\\"=\\\"\\n\";\n    str += \"                    ; https://datatracker.ietf.org/doc/html/rfc3986#section-2.2\\n\";\n    str += \"\\n\";\n    str += \"; https://datatracker.ietf.org/doc/html/rfc5234#appendix-B.1\\n\";\n    str += \"ALPHA               = %x41-5A / %x61-7A   ; A-Z / a-z\\n\";\n    str += \"DIGIT               = %x30-39            ; 0-9\\n\";\n    str += \"HEXDIG              = DIGIT / \\\"A\\\" / \\\"B\\\" / \\\"C\\\" / \\\"D\\\" / \\\"E\\\" / \\\"F\\\"\\n\";\n    return str;\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}